lockVersion: 2.0.0
id: 211f109d-fefa-4e6d-8a41-db1221672b8a
management:
  docChecksum: 9b9656e7c13237d53332cee5d1349d4c
  docVersion: 1.0.4
  speakeasyVersion: 1.492.0
  generationVersion: 2.512.4
  releaseVersion: 0.1.0
  configChecksum: 979b1255e607b8dbc55f7639bb16e1df
  repoURL: https://github.com/solarwinds/swo-sdk-go.git
  repoSubDirectory: swov1
  installationURL: https://github.com/solarwinds/swo-sdk-go/swov1
features:
  go:
    additionalDependencies: 0.1.0
    constsAndDefaults: 0.1.9
    core: 3.7.0
    defaultEnabledRetries: 0.2.0
    deprecations: 2.81.3
    devContainers: 2.90.0
    envVarSecurityUsage: 0.3.2
    globalSecurity: 2.82.11
    globalSecurityCallbacks: 0.1.0
    globalSecurityFlattening: 0.1.0
    globalServerURLs: 2.82.2
    ignores: 2.81.1
    inputOutputModels: 2.83.0
    intellisenseMarkdownSupport: 0.1.0
    nullables: 0.1.0
    pagination: 2.82.2
    responseFormat: 0.1.2
    retries: 2.83.2
    sdkHooks: 0.1.0
generatedFiles:
  - .devcontainer/README.md
  - .devcontainer/devcontainer.json
  - .devcontainer/setup.sh
  - .gitattributes
  - /models/apierrors/createcompositemetric.go
  - /models/apierrors/createwebsitemonitor.go
  - /models/apierrors/deletecompositemetric.go
  - /models/apierrors/deletewebsitemonitor.go
  - /models/apierrors/getentitybyid.go
  - /models/apierrors/getmetricbyname.go
  - /models/apierrors/getwebsitemonitor.go
  - /models/apierrors/listentities.go
  - /models/apierrors/listmetricattributes.go
  - /models/apierrors/listmetricattributevalues.go
  - /models/apierrors/listmetricmeasurements.go
  - /models/apierrors/listmetricsforentitytype.go
  - /models/apierrors/pausewebsitemonitor.go
  - /models/apierrors/unpausewebsitemonitor.go
  - /models/apierrors/updateentitybyid.go
  - /models/apierrors/updateusermetric.go
  - /models/apierrors/updatewebsitemonitor.go
  - /models/components/availabilitychecksettings.go
  - /models/components/changeevent.go
  - /models/components/checkforstring.go
  - /models/components/commonkeyvaluepair.go
  - /models/components/commonlink.go
  - /models/components/commonmetricinfo.go
  - /models/components/commonpageinfo.go
  - /models/components/compositemetric.go
  - /models/components/createtokenrequest.go
  - /models/components/customheaders.go
  - /models/components/entity.go
  - /models/components/entityinput.go
  - /models/components/httpmetadata.go
  - /models/components/logsarchive.go
  - /models/components/logsevent.go
  - /models/components/metricsaggregationmethods.go
  - /models/components/metricseriestype.go
  - /models/components/metricsgrouping.go
  - /models/components/metricsmeasurement.go
  - /models/components/operator.go
  - /models/components/probelocationtype.go
  - /models/components/probeplatform.go
  - /models/components/probeplatformoptions.go
  - /models/components/security.go
  - /models/components/sslmonitoring.go
  - /models/components/tag.go
  - /models/components/testfrom.go
  - /models/components/updatecompositemetric.go
  - /models/components/website.go
  - /models/components/websiteprotocol.go
  - /models/operations/createchangeevent.go
  - /models/operations/createcompositemetric.go
  - /models/operations/createtoken.go
  - /models/operations/createwebsitemonitor.go
  - /models/operations/deletecompositemetric.go
  - /models/operations/deletewebsitemonitor.go
  - /models/operations/getentitybyid.go
  - /models/operations/getmetricbyname.go
  - /models/operations/getwebsitemonitor.go
  - /models/operations/listentities.go
  - /models/operations/listentitytypes.go
  - /models/operations/listlogarchives.go
  - /models/operations/listmetricattributes.go
  - /models/operations/listmetricattributevalues.go
  - /models/operations/listmetricmeasurements.go
  - /models/operations/listmetrics.go
  - /models/operations/listmetricsforentitytype.go
  - /models/operations/pausewebsitemonitor.go
  - /models/operations/searchlogs.go
  - /models/operations/unpausewebsitemonitor.go
  - /models/operations/updateentitybyid.go
  - /models/operations/updateusermetric.go
  - /models/operations/updatewebsitemonitor.go
  - USAGE.md
  - changeevents.go
  - dem.go
  - docs/models/apierrors/code.md
  - docs/models/apierrors/createcompositemetriccode.md
  - docs/models/apierrors/createcompositemetricmetricsresponsebody.md
  - docs/models/apierrors/createcompositemetricmetricsresponseresponsebody.md
  - docs/models/apierrors/createcompositemetricresponsebody.md
  - docs/models/apierrors/createwebsitemonitorresponsebody.md
  - docs/models/apierrors/deletecompositemetricmetricsresponsebody.md
  - docs/models/apierrors/deletecompositemetricresponsebody.md
  - docs/models/apierrors/deletewebsitemonitorresponsebody.md
  - docs/models/apierrors/getentitybyidcode.md
  - docs/models/apierrors/getentitybyidentitiescode.md
  - docs/models/apierrors/getentitybyidentitiesresponse500code.md
  - docs/models/apierrors/getentitybyidentitiesresponse500responsebody.md
  - docs/models/apierrors/getentitybyidentitiesresponsebody.md
  - docs/models/apierrors/getentitybyidentitiesresponsecode.md
  - docs/models/apierrors/getentitybyidentitiesresponseresponsebody.md
  - docs/models/apierrors/getentitybyidresponsebody.md
  - docs/models/apierrors/getmetricbynamecode.md
  - docs/models/apierrors/getmetricbynameresponsebody.md
  - docs/models/apierrors/getwebsitemonitorresponsebody.md
  - docs/models/apierrors/listentitiescode.md
  - docs/models/apierrors/listentitiesentitiescode.md
  - docs/models/apierrors/listentitiesentitiesresponsebody.md
  - docs/models/apierrors/listentitiesentitiesresponseresponsebody.md
  - docs/models/apierrors/listentitiesresponsebody.md
  - docs/models/apierrors/listmetricattributescode.md
  - docs/models/apierrors/listmetricattributesresponsebody.md
  - docs/models/apierrors/listmetricattributevaluescode.md
  - docs/models/apierrors/listmetricattributevaluesresponsebody.md
  - docs/models/apierrors/listmetricmeasurementscode.md
  - docs/models/apierrors/listmetricmeasurementsresponsebody.md
  - docs/models/apierrors/listmetricsforentitytypecode.md
  - docs/models/apierrors/listmetricsforentitytyperesponsebody.md
  - docs/models/apierrors/pausewebsitemonitorresponsebody.md
  - docs/models/apierrors/unpausewebsitemonitorresponsebody.md
  - docs/models/apierrors/updateentitybyidcode.md
  - docs/models/apierrors/updateentitybyidentitiescode.md
  - docs/models/apierrors/updateentitybyidentitiesresponse500code.md
  - docs/models/apierrors/updateentitybyidentitiesresponse500responsebody.md
  - docs/models/apierrors/updateentitybyidentitiesresponsebody.md
  - docs/models/apierrors/updateentitybyidentitiesresponsecode.md
  - docs/models/apierrors/updateentitybyidentitiesresponseresponsebody.md
  - docs/models/apierrors/updateentitybyidresponsebody.md
  - docs/models/apierrors/updateusermetriccode.md
  - docs/models/apierrors/updateusermetricmetricscode.md
  - docs/models/apierrors/updateusermetricmetricsresponse500responsebody.md
  - docs/models/apierrors/updateusermetricmetricsresponsebody.md
  - docs/models/apierrors/updateusermetricmetricsresponsecode.md
  - docs/models/apierrors/updateusermetricmetricsresponseresponsebody.md
  - docs/models/apierrors/updateusermetricresponsebody.md
  - docs/models/apierrors/updatewebsitemonitorresponsebody.md
  - docs/models/components/availabilitychecksettings.md
  - docs/models/components/category.md
  - docs/models/components/changeevent.md
  - docs/models/components/checkforstring.md
  - docs/models/components/commonkeyvaluepair.md
  - docs/models/components/commonlink.md
  - docs/models/components/commonmetricinfo.md
  - docs/models/components/commonpageinfo.md
  - docs/models/components/compositemetric.md
  - docs/models/components/createtokenrequest.md
  - docs/models/components/customheaders.md
  - docs/models/components/entity.md
  - docs/models/components/entityinput.md
  - docs/models/components/healthscore.md
  - docs/models/components/httpmetadata.md
  - docs/models/components/logsarchive.md
  - docs/models/components/logsevent.md
  - docs/models/components/metricsaggregationmethods.md
  - docs/models/components/metricseriestype.md
  - docs/models/components/metricsgrouping.md
  - docs/models/components/metricsmeasurement.md
  - docs/models/components/operator.md
  - docs/models/components/probelocationtype.md
  - docs/models/components/probeplatform.md
  - docs/models/components/probeplatformoptions.md
  - docs/models/components/rum.md
  - docs/models/components/security.md
  - docs/models/components/sslmonitoring.md
  - docs/models/components/tag.md
  - docs/models/components/tags.md
  - docs/models/components/testfrom.md
  - docs/models/components/type.md
  - docs/models/components/updatecompositemetric.md
  - docs/models/components/website.md
  - docs/models/components/websiteprotocol.md
  - docs/models/operations/availabilitychecksettings.md
  - docs/models/operations/createchangeeventresponse.md
  - docs/models/operations/createchangeeventresponsebody.md
  - docs/models/operations/createcompositemetricresponse.md
  - docs/models/operations/createtokenresponse.md
  - docs/models/operations/createtokenresponsebody.md
  - docs/models/operations/createwebsitemonitorresponse.md
  - docs/models/operations/createwebsitemonitorresponsebody.md
  - docs/models/operations/deletecompositemetricrequest.md
  - docs/models/operations/deletecompositemetricresponse.md
  - docs/models/operations/deletewebsitemonitorrequest.md
  - docs/models/operations/deletewebsitemonitorresponse.md
  - docs/models/operations/deletewebsitemonitorresponsebody.md
  - docs/models/operations/getentitybyidrequest.md
  - docs/models/operations/getentitybyidresponse.md
  - docs/models/operations/getmetricbynamerequest.md
  - docs/models/operations/getmetricbynameresponse.md
  - docs/models/operations/getwebsitemonitorrequest.md
  - docs/models/operations/getwebsitemonitorresponse.md
  - docs/models/operations/getwebsitemonitorresponsebody.md
  - docs/models/operations/listentitiesrequest.md
  - docs/models/operations/listentitiesresponse.md
  - docs/models/operations/listentitiesresponsebody.md
  - docs/models/operations/listentitytypesresponse.md
  - docs/models/operations/listentitytypesresponsebody.md
  - docs/models/operations/listlogarchivesrequest.md
  - docs/models/operations/listlogarchivesresponse.md
  - docs/models/operations/listlogarchivesresponsebody.md
  - docs/models/operations/listmetricattributesrequest.md
  - docs/models/operations/listmetricattributesresponse.md
  - docs/models/operations/listmetricattributesresponsebody.md
  - docs/models/operations/listmetricattributevaluesrequest.md
  - docs/models/operations/listmetricattributevaluesresponse.md
  - docs/models/operations/listmetricattributevaluesresponsebody.md
  - docs/models/operations/listmetricmeasurementsrequest.md
  - docs/models/operations/listmetricmeasurementsresponse.md
  - docs/models/operations/listmetricmeasurementsresponsebody.md
  - docs/models/operations/listmetricsforentitytyperequest.md
  - docs/models/operations/listmetricsforentitytyperesponse.md
  - docs/models/operations/listmetricsforentitytyperesponsebody.md
  - docs/models/operations/listmetricsrequest.md
  - docs/models/operations/listmetricsresponse.md
  - docs/models/operations/listmetricsresponsebody.md
  - docs/models/operations/option.md
  - docs/models/operations/pausewebsitemonitorrequest.md
  - docs/models/operations/pausewebsitemonitorresponse.md
  - docs/models/operations/pausewebsitemonitorresponsebody.md
  - docs/models/operations/rum.md
  - docs/models/operations/searchlogsrequest.md
  - docs/models/operations/searchlogsresponse.md
  - docs/models/operations/searchlogsresponsebody.md
  - docs/models/operations/status.md
  - docs/models/operations/unpausewebsitemonitorrequest.md
  - docs/models/operations/unpausewebsitemonitorresponse.md
  - docs/models/operations/unpausewebsitemonitorresponsebody.md
  - docs/models/operations/updateentitybyidrequest.md
  - docs/models/operations/updateentitybyidresponse.md
  - docs/models/operations/updateusermetricrequest.md
  - docs/models/operations/updateusermetricresponse.md
  - docs/models/operations/updatewebsitemonitorrequest.md
  - docs/models/operations/updatewebsitemonitorresponse.md
  - docs/models/operations/updatewebsitemonitorresponsebody.md
  - docs/sdks/changeevents/README.md
  - docs/sdks/dem/README.md
  - docs/sdks/entities/README.md
  - docs/sdks/logs/README.md
  - docs/sdks/metadata/README.md
  - docs/sdks/metrics/README.md
  - docs/sdks/swo/README.md
  - docs/sdks/tokens/README.md
  - entities.go
  - go.mod
  - internal/hooks/hooks.go
  - internal/utils/contenttype.go
  - internal/utils/env.go
  - internal/utils/form.go
  - internal/utils/headers.go
  - internal/utils/json.go
  - internal/utils/pathparams.go
  - internal/utils/queryparams.go
  - internal/utils/requestbody.go
  - internal/utils/retries.go
  - internal/utils/security.go
  - internal/utils/utils.go
  - logs.go
  - metadata.go
  - metrics.go
  - models/apierrors/apierror.go
  - models/operations/options.go
  - retry/config.go
  - swo.go
  - tokens.go
  - types/bigint.go
  - types/date.go
  - types/datetime.go
  - types/decimal.go
  - types/pointers.go
examples:
  createChangeEvent:
    speakeasy-default-create-change-event:
      requestBody:
        application/json: {"id": 1731676626, "name": "app-deploys", "title": "deployed v45", "timestamp": 1731676626, "source": "foo3.example.com", "tags": {"app": "foo", "environment": "production"}, "links": [{"rel": "self", "href": "https://example.com"}]}
      responses:
        "200":
          application/json: {"id": 119883}
  createWebsiteMonitor:
    speakeasy-default-create-website-monitor:
      requestBody:
        application/json: {"name": "solarwinds.com", "url": "https://www.solarwinds.com", "availabilityCheckSettings": {"checkForString": {"operator": "CONTAINS", "value": "string"}, "testIntervalInSeconds": 14400, "protocols": ["HTTP", "HTTPS"], "platformOptions": {"probePlatforms": ["AWS"], "testFromAll": true}, "testFrom": {"type": "REGION", "values": ["NA"]}, "ssl": {"enabled": true, "daysPriorToExpiration": 7, "ignoreIntermediateCertificates": true}, "customHeaders": [{"name": "string", "value": "string"}], "allowInsecureRenegotiation": true, "postData": "{\"example\": \"value\"}"}, "tags": [{"key": "environment", "value": "production"}], "rum": {"apdexTimeInSeconds": 4, "spa": true}}
      responses:
        "200":
          application/json: {"id": "e-1448474379026206720"}
        "400":
          application/json: {"code": 404, "message": "Entity does not exist", "": {}}
  getWebsiteMonitor:
    speakeasy-default-get-website-monitor:
      parameters:
        path:
          entityId: "<id>"
      responses:
        "200":
          application/json: {"id": "e-1448474379026206720", "type": "Website", "status": "up", "name": "solarwinds.com", "url": "https://www.solarwinds.com", "availabilityCheckSettings": {"checkForString": {"operator": "CONTAINS", "value": "string"}, "testIntervalInSeconds": 14400, "protocols": ["HTTP", "HTTPS"], "platformOptions": {"probePlatforms": ["AWS"], "testFromAll": true}, "testFrom": {"type": "REGION", "values": ["NA"]}, "ssl": {"enabled": true, "daysPriorToExpiration": 7, "ignoreIntermediateCertificates": true}, "customHeaders": [{"name": "string", "value": "string"}], "allowInsecureRenegotiation": true, "postData": "{\"example\": \"value\"}"}, "tags": [{"key": "environment", "value": "production"}], "rum": {"apdexTimeInSeconds": 4, "snippet": "string", "spa": true}, "lastOutageStartTime": "2025-01-15T14:31:19.735Z", "lastOutageEndTime": "2025-01-15T14:31:19.735Z", "lastTestTime": "2025-01-15T14:31:19.735Z", "lastErrorTime": "2025-01-15T14:31:19.735Z", "lastResponseTime": 376, "nextOnDemandAvailabilityTime": 0}
        "400":
          application/json: {"code": 404, "message": "Entity does not exist", "": {}}
  updateWebsiteMonitor:
    speakeasy-default-update-website-monitor:
      parameters:
        path:
          entityId: "<id>"
      requestBody:
        application/json: {"name": "solarwinds.com", "url": "https://www.solarwinds.com", "availabilityCheckSettings": {"checkForString": {"operator": "CONTAINS", "value": "string"}, "testIntervalInSeconds": 14400, "protocols": ["HTTP", "HTTPS"], "platformOptions": {"probePlatforms": ["AWS"], "testFromAll": true}, "testFrom": {"type": "REGION", "values": ["NA"]}, "ssl": {"enabled": true, "daysPriorToExpiration": 7, "ignoreIntermediateCertificates": true}, "customHeaders": [{"name": "string", "value": "string"}], "allowInsecureRenegotiation": true, "postData": "{\"example\": \"value\"}"}, "tags": [{"key": "environment", "value": "production"}], "rum": {"apdexTimeInSeconds": 4, "spa": true}}
      responses:
        "200":
          application/json: {"id": "e-1448474379026206720"}
        "400":
          application/json: {"code": 404, "message": "Entity does not exist", "": {}}
  deleteWebsiteMonitor:
    speakeasy-default-delete-website-monitor:
      parameters:
        path:
          entityId: "<id>"
      responses:
        "200":
          application/json: {"id": "e-1448474379026206720"}
        "400":
          application/json: {"code": 404, "message": "Entity does not exist", "": {}}
  pauseWebsiteMonitor:
    speakeasy-default-pause-website-monitor:
      parameters:
        path:
          entityId: "<id>"
      responses:
        "200":
          application/json: {"id": "e-1448474379026206720"}
        "400":
          application/json: {"code": 404, "message": "Entity does not exist", "": {}}
  unpauseWebsiteMonitor:
    speakeasy-default-unpause-website-monitor:
      parameters:
        path:
          entityId: "<id>"
      responses:
        "200":
          application/json: {"id": "e-1448474379026206720"}
        "400":
          application/json: {"code": 404, "message": "Entity does not exist", "": {}}
  listEntities:
    speakeasy-default-list-entities:
      parameters:
        query:
          type: "<value>"
      responses:
        "200":
          application/json: {"entities": [{"id": "e-1234567890", "type": "SyslogHost", "name": "syslog-host-1", "displayName": "SyslogTest", "createdTime": "2024-11-25T16:38:24Z", "updatedTime": "2024-12-01T16:38:24Z", "lastSeenTime": "2024-11-25T16:38:24Z", "inMaintenance": false, "healthscore": {"score": 100, "category": "good"}, "tags": {"gg.tk.token": "test", "kfi.tk.token": "qa-test"}, "attributes": {"protocols": ["HTTP"], "features": ["rum"], "isAvailabilityCheckPaused": false, "extensions": {"has_extension": true}}}], "pageInfo": {"prevPage": "<value>", "nextPage": "<value>"}}
        "400":
          application/json: {"code": "BadRequest", "message": "<value>", "": {}}
        "401":
          application/json: {"code": "Unauthorized", "message": "<value>", "": {}}
        "500":
          application/json: {"code": "InternalServerError", "message": "<value>", "": {}}
  getEntityById:
    speakeasy-default-get-entity-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {"id": "e-1234567890", "type": "SyslogHost", "name": "syslog-host-1", "displayName": "SyslogTest", "createdTime": "2024-11-25T16:38:24Z", "updatedTime": "2024-12-01T16:38:24Z", "lastSeenTime": "2024-11-25T16:38:24Z", "inMaintenance": false, "healthscore": {"score": 100, "category": "good"}, "tags": {"gg.tk.token": "test", "kfi.tk.token": "qa-test"}, "attributes": {"protocols": ["HTTP"], "features": ["rum"], "isAvailabilityCheckPaused": false, "extensions": {"has_extension": true}}}
        "400":
          application/json: {"code": "BadRequest", "message": "<value>", "": {}}
        "401":
          application/json: {"code": "Unauthorized", "message": "<value>", "": {}}
        "404":
          application/json: {"code": "NotFound", "message": "<value>", "": {}}
        "500":
          application/json: {"code": "InternalServerError", "message": "<value>", "": {}}
  updateEntityById:
    speakeasy-default-update-entity-by-id:
      parameters:
        path:
          id: "<id>"
      requestBody:
        application/json: {"displayName": "SyslogTest", "tags": {"gg.tk.token": "test", "kfi.tk.token": "qa-test"}}
      responses:
        "400":
          application/json: {"code": "BadRequest", "message": "<value>", "": {}}
        "401":
          application/json: {"code": "Unauthorized", "message": "<value>", "": {}}
        "404":
          application/json: {"code": "NotFound", "message": "<value>", "": {}}
        "500":
          application/json: {"code": "InternalServerError", "message": "<value>", "": {}}
  searchLogs:
    speakeasy-default-search-logs:
      parameters:
        query:
          direction: "backward"
      responses:
        "200":
          application/json: {"logs": [{"id": "1793698955374546944", "time": "2024-01-01T00:00:00Z", "message": "This is a log message", "hostname": "webserver.example.com", "severity": "INFO", "program": "httpd"}], "pageInfo": {"prevPage": "<value>", "nextPage": "<value>"}}
  listLogArchives:
    speakeasy-default-list-log-archives:
      parameters:
        query:
          startTime: "<value>"
          endTime: "<value>"
      responses:
        "200":
          application/json: {"logArchives": [{"id": "logs/138723/dt=2024-01-23/2024-01-23-08.json.gz", "name": "2024-01-23-08.json.gz", "downloadUrl": "https://ssp-log-archives.s3.amazonaws.com/logs/138723/dt%3D2024-01-23/2024-01-23-08.json.gz?X-Amz-Security-Token=IQ...", "archivedTimestamp": "1706020985", "archiveSize": 817226354}, {"id": "logs/138723/dt=2024-01-23/2024-01-23-08.json.gz", "name": "2024-01-23-08.json.gz", "downloadUrl": "https://ssp-log-archives.s3.amazonaws.com/logs/138723/dt%3D2024-01-23/2024-01-23-08.json.gz?X-Amz-Security-Token=IQ...", "archivedTimestamp": "1706020985", "archiveSize": 817226354}, {"id": "logs/138723/dt=2024-01-23/2024-01-23-08.json.gz", "name": "2024-01-23-08.json.gz", "downloadUrl": "https://ssp-log-archives.s3.amazonaws.com/logs/138723/dt%3D2024-01-23/2024-01-23-08.json.gz?X-Amz-Security-Token=IQ...", "archivedTimestamp": "1706020985", "archiveSize": 817226354}], "pageInfo": {"prevPage": "<value>", "nextPage": "<value>"}}
  listEntityTypes:
    speakeasy-default-list-entity-types:
      responses:
        "200":
          application/json: {"types": ["Service", "ServiceInstance", "KubernetesCluster"]}
  listMetricsForEntityType:
    speakeasy-default-list-metrics-for-entity-type:
      parameters:
        path:
          type: "<value>"
        query: {}
      responses:
        "200":
          application/json: {"type": "KubernetesCluster", "metrics": [{"name": "composite.k8s.pod.container.status.restarts.increase", "units": "count", "formula": "increase(k8s.kube_pod_container_status_restarts_total[5m])", "lastReportedTime": "2021-01-01T00:00:00Z"}]}
        "404": {}
  listMetrics:
    speakeasy-default-list-metrics:
      responses:
        "200":
          application/json: {"metricsInfo": [], "pageInfo": {"prevPage": "<value>", "nextPage": "<value>"}}
  createCompositeMetric:
    speakeasy-default-create-composite-metric:
      requestBody:
        application/json: {"name": "composite.custom.system.disk.io.rate", "displayName": "Disk IO rate", "description": "Disk bytes transferred per second", "formula": "rate(system.disk.io[5m])", "units": "bytes/s"}
      responses:
        "201":
          application/json: {"name": "composite.custom.system.disk.io.rate", "displayName": "Disk IO rate", "description": "Disk bytes transferred per second", "formula": "rate(system.disk.io[5m])", "units": "bytes/s"}
        "400":
          application/json: {"code": 404, "message": "Entity does not exist", "": {}}
        "403":
          application/json: {"code": 404, "message": "Entity does not exist", "": {}}
        "500": {}
  getMetricByName:
    speakeasy-default-get-metric-by-name:
      parameters:
        path:
          name: "<value>"
      responses:
        "200":
          application/json: {"name": "composite.k8s.pod.container.status.restarts.increase", "units": "count", "formula": "increase(k8s.kube_pod_container_status_restarts_total[5m])", "lastReportedTime": "2021-01-01T00:00:00Z"}
        "404": {}
  listMetricAttributes:
    speakeasy-default-list-metric-attributes:
      parameters:
        path:
          name: "<value>"
        query: {}
      responses:
        "200":
          application/json: {"names": [], "pageInfo": {"prevPage": "<value>", "nextPage": "<value>"}}
        "404": {}
  listMetricAttributeValues:
    speakeasy-default-list-metric-attribute-values:
      parameters:
        path:
          name: "<value>"
          attributeName: "<value>"
        query: {}
      responses:
        "200":
          application/json: {"name": "<value>", "values": [], "pageInfo": {"prevPage": "<value>", "nextPage": "<value>"}}
        "404": {}
  listMetricMeasurements:
    speakeasy-default-list-metric-measurements:
      parameters:
        path:
          name: "<value>"
        query:
          seriesType: "SCALAR"
      responses:
        "200":
          application/json: {"groupings": [{"attributes": [{"key": "<key>", "value": "<value>"}, {"key": "<key>", "value": "<value>"}], "measurements": []}, {"attributes": [{"key": "<key>", "value": "<value>"}, {"key": "<key>", "value": "<value>"}, {"key": "<key>", "value": "<value>"}], "measurements": [{"time": "<value>", "value": 730756}, {"time": "<value>", "value": 115821}, {"time": "<value>", "value": 25026}]}, {"attributes": [], "measurements": [{"time": "<value>", "value": 201967}]}], "bucketSizeInSeconds": 45557, "pageInfo": {"prevPage": "<value>", "nextPage": "<value>"}}
        "404": {}
  createToken:
    speakeasy-default-create-token:
      requestBody:
        application/json: {"name": "<value>", "tags": {"server": "<value>", "tag_without_value": "<value>"}, "type": "ingestion"}
      responses:
        "200":
          application/json: {"token": "<value>"}
  updateUserMetric:
    speakeasy-default-update-user-metric:
      parameters:
        path:
          name: "<value>"
      requestBody:
        application/json: {"displayName": "Disk IO rate", "description": "Disk bytes transferred per second", "formula": "rate(system.disk.io[5m])", "units": "bytes/s"}
      responses:
        "403":
          application/json: {"code": 404, "message": "Entity does not exist", "": {}}
        "404": {}
        "500": {}
  deleteCompositeMetric:
    speakeasy-default-delete-composite-metric:
      parameters:
        path:
          name: "<value>"
      responses:
        "400":
          application/json: {"code": 404, "message": "Entity does not exist", "": {}}
        "403":
          application/json: {"code": 404, "message": "Entity does not exist", "": {}}
examplesVersion: 1.0.0
generatedTests: {}
