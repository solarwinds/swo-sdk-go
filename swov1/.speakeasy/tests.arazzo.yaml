arazzo: 1.0.1
info:
  title: Test Suite
  summary: Created from /Users/michael.anderson/Dev/solarwinds/swo-sdk-go/.speakeasy/temp/output_fcc8ac.json
  version: 0.0.1
sourceDescriptions:
  - name: /Users/michael.anderson/Dev/solarwinds/swo-sdk-go/.speakeasy/temp/output_fcc8ac.json
    url: https://TBD.com
    type: openapi
workflows:
  - workflowId: createChangeEvent
    steps:
      - stepId: test
        operationId: createChangeEvent
        requestBody:
          contentType: application/json
          payload:
            id: 1731676626
            links:
              - href: https://example.com
                rel: self
            name: app-deploys
            source: foo3.example.com
            tags:
              app: foo
              environment: production
            timestamp: 1731676626
            title: deployed v45
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "id": 119883
              }
            type: simple
    x-speakeasy-test-group: changeEvents
  - workflowId: activateAwsIntegration
    steps:
      - stepId: test
        operationId: activateAwsIntegration
        requestBody:
          contentType: application/json
          payload:
            accountId: <id>
            enable: false
            managementAccountId: <id>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: cloudAccounts
  - workflowId: createOrgStructure
    steps:
      - stepId: test
        operationId: createOrgStructure
        requestBody:
          contentType: application/json
          payload:
            mgmtAccountId: <id>
            structure:
              - child_id: <id>
                child_name: <value>
              - child_id: <id>
                child_name: <value>
              - child_id: <id>
                child_name: <value>
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: cloudAccounts
  - workflowId: updateAwsIntegration
    steps:
      - stepId: test
        operationId: updateAwsIntegration
        requestBody:
          contentType: application/json
          payload:
            accountId: <id>
            accountName: <value>
            managementAccountId: <id>
            roleArn: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "selectedRegions": [
                  "\u003cvalue\u003e",
                  "\u003cvalue\u003e",
                  "\u003cvalue\u003e"
                ],
                "externalId": "\u003cid\u003e",
                "integrationId": "\u003cid\u003e",
                "integrationType": "POLLING",
                "isNewAccount": true
              }
            type: simple
    x-speakeasy-test-group: cloudAccounts
  - workflowId: validateMgmtAccountOnboarding
    steps:
      - stepId: test
        operationId: validateMgmtAccountOnboarding
        parameters:
          - name: request
            in: query
            value:
              managementAccountId: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "isOnboarded": false
              }
            type: simple
    x-speakeasy-test-group: cloudAccounts
  - workflowId: observeDatabase
    steps:
      - stepId: test
        operationId: observeDatabase
        requestBody:
          contentType: application/json
          payload:
            agentId: <id>
            authMethod: entraclientsecret
            captureMethod: null
            configOptions:
              - key: <key>
                value: <value>
            dbConnOptions:
              cloudRegion: ""
              encryptedCredentials: ""
              host: dependent-bar.com
              port: <value>
              sslEnabled: false
              sslOptions:
                sslCAPath: ""
                sslCertPath: ""
                sslKeyPath: ""
                sslMode: require
              user: ""
            dbType: mongo
            name: <value>
            tags: []
        successCriteria:
          - condition: $statusCode == 201
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "id": "\u003cid\u003e"
              }
            type: simple
    x-speakeasy-test-group: dbo
  - workflowId: getPublicKey
    steps:
      - stepId: test
        operationId: getPublicKey
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "publicKey": "\u003cvalue\u003e"
              }
            type: simple
    x-speakeasy-test-group: dbo
  - workflowId: updateDatabase
    steps:
      - stepId: test
        operationId: updateDatabase
        parameters:
          - name: entityId
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            name: ""
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: dbo
  - workflowId: deleteDatabase
    steps:
      - stepId: test
        operationId: deleteDatabase
        parameters:
          - name: entityId
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: dbo
  - workflowId: getPluginConfig
    steps:
      - stepId: test
        operationId: getPluginConfig
        parameters:
          - name: entityId
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "pluginConfig": [
                  {
                    "pluginName": "\u003cvalue\u003e",
                    "config": [
                      {
                        "key": "\u003ckey\u003e",
                        "value": "\u003cvalue\u003e"
                      }
                    ]
                  },
                  {
                    "pluginName": "\u003cvalue\u003e",
                    "config": []
                  },
                  {
                    "pluginName": "\u003cvalue\u003e",
                    "config": [
                      {
                        "key": "\u003ckey\u003e",
                        "value": "\u003cvalue\u003e"
                      }
                    ]
                  }
                ]
              }
            type: simple
    x-speakeasy-test-group: dbo
  - workflowId: getPlugins
    steps:
      - stepId: test
        operationId: getPlugins
        parameters:
          - name: entityId
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "plugins": [
                  {
                    "pluginName": "\u003cvalue\u003e",
                    "status": "\u003cvalue\u003e"
                  },
                  {
                    "pluginName": "\u003cvalue\u003e",
                    "status": "\u003cvalue\u003e"
                  }
                ]
              }
            type: simple
    x-speakeasy-test-group: dbo
  - workflowId: pluginOperation
    steps:
      - stepId: test
        operationId: pluginOperation
        parameters:
          - name: entityId
            in: path
            value: <id>
          - name: operation
            in: path
            value: <value>
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: dbo
  - workflowId: getDemSettings
    steps:
      - stepId: test
        operationId: getDemSettings
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "failingTestLocations": "all",
                "consecutiveForDown": 2
              }
            type: simple
    x-speakeasy-test-group: dem
  - workflowId: setDemSettings
    steps:
      - stepId: test
        operationId: setDemSettings
        requestBody:
          contentType: application/json
          payload:
            consecutiveForDown: 2
            failingTestLocations: all
        successCriteria:
          - condition: $statusCode == 200
    x-speakeasy-test-group: dem
  - workflowId: createWebsite
    steps:
      - stepId: test
        operationId: createWebsite
        requestBody:
          contentType: application/json
          payload:
            availabilityCheckSettings:
              allowInsecureRenegotiation: true
              checkForString:
                operator: CONTAINS
                value: string
              customHeaders:
                - name: string
                  value: string
              outageConfiguration:
                consecutiveForDown: 2
                failingTestLocations: all
              platformOptions:
                probePlatforms:
                  - AWS
                testFromAll: true
              postData: '{"example": "value"}'
              protocols:
                - HTTP
                - HTTPS
              ssl:
                daysPriorToExpiration: 7
                enabled: true
                ignoreIntermediateCertificates: true
              testFrom:
                type: REGION
                values:
                  - NA
              testIntervalInSeconds: 14400
            name: solarwinds.com
            rum:
              apdexTimeInSeconds: 4
              spa: true
            tags:
              - key: environment
                value: production
            url: https://www.solarwinds.com
        successCriteria:
          - condition: $statusCode == 201
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "id": "e-1448474379026206720"
              }
            type: simple
    x-speakeasy-test-group: dem
  - workflowId: getWebsite
    steps:
      - stepId: test
        operationId: getWebsite
        parameters:
          - name: entityId
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "id": "e-1448474379026206720",
                "type": "Website",
                "status": "up",
                "name": "solarwinds.com",
                "url": "https://www.solarwinds.com",
                "availabilityCheckSettings": {
                  "checkForString": {
                    "operator": "CONTAINS",
                    "value": "string"
                  },
                  "testIntervalInSeconds": 14400,
                  "protocols": [
                    "HTTP",
                    "HTTPS"
                  ],
                  "platformOptions": {
                    "probePlatforms": [
                      "AWS"
                    ],
                    "testFromAll": true
                  },
                  "testFrom": {
                    "type": "REGION",
                    "values": [
                      "NA"
                    ]
                  },
                  "ssl": {
                    "enabled": true,
                    "daysPriorToExpiration": 7,
                    "ignoreIntermediateCertificates": true
                  },
                  "customHeaders": [
                    {
                      "name": "string",
                      "value": "string"
                    }
                  ],
                  "allowInsecureRenegotiation": true,
                  "postData": "{\"example\": \"value\"}",
                  "outageConfiguration": {
                    "failingTestLocations": "all",
                    "consecutiveForDown": 2
                  }
                },
                "tags": [
                  {
                    "key": "environment",
                    "value": "production"
                  }
                ],
                "rum": {
                  "apdexTimeInSeconds": 4,
                  "snippet": "string",
                  "spa": true
                },
                "lastOutageStartTime": "2025-01-15T14:31:19.735Z",
                "lastOutageEndTime": "2025-01-15T14:31:19.735Z",
                "lastTestTime": "2025-01-15T14:31:19.735Z",
                "lastErrorTime": "2025-01-15T14:31:19.735Z",
                "lastResponseTime": 376,
                "nextOnDemandAvailabilityTime": 0
              }
            type: simple
    x-speakeasy-test-group: dem
  - workflowId: updateWebsite
    steps:
      - stepId: test
        operationId: updateWebsite
        parameters:
          - name: entityId
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            availabilityCheckSettings:
              allowInsecureRenegotiation: true
              checkForString:
                operator: CONTAINS
                value: string
              customHeaders:
                - name: string
                  value: string
              outageConfiguration:
                consecutiveForDown: 2
                failingTestLocations: all
              platformOptions:
                probePlatforms:
                  - AWS
                testFromAll: true
              postData: '{"example": "value"}'
              protocols:
                - HTTP
                - HTTPS
              ssl:
                daysPriorToExpiration: 7
                enabled: true
                ignoreIntermediateCertificates: true
              testFrom:
                type: REGION
                values:
                  - NA
              testIntervalInSeconds: 14400
            name: solarwinds.com
            rum:
              apdexTimeInSeconds: 4
              spa: true
            tags:
              - key: environment
                value: production
            url: https://www.solarwinds.com
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "id": "e-1448474379026206720"
              }
            type: simple
    x-speakeasy-test-group: dem
  - workflowId: deleteWebsite
    steps:
      - stepId: test
        operationId: deleteWebsite
        parameters:
          - name: entityId
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "id": "e-1448474379026206720"
              }
            type: simple
    x-speakeasy-test-group: dem
  - workflowId: pauseWebsiteMonitoring
    steps:
      - stepId: test
        operationId: pauseWebsiteMonitoring
        parameters:
          - name: entityId
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "id": "e-1448474379026206720"
              }
            type: simple
    x-speakeasy-test-group: dem
  - workflowId: unpauseWebsiteMonitoring
    steps:
      - stepId: test
        operationId: unpauseWebsiteMonitoring
        parameters:
          - name: entityId
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "id": "e-1448474379026206720"
              }
            type: simple
    x-speakeasy-test-group: dem
  - workflowId: listEntities
    steps:
      - stepId: test
        operationId: listEntities
        parameters:
          - name: type
            in: query
            value: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "entities": [
                  {
                    "id": "e-1234567890",
                    "type": "SyslogHost",
                    "name": "syslog-host-1",
                    "displayName": "SyslogTest",
                    "createdTime": "2024-11-25T16:38:24Z",
                    "updatedTime": "2024-12-01T16:38:24Z",
                    "lastSeenTime": "2024-11-25T16:38:24Z",
                    "inMaintenance": false,
                    "healthscore": {
                      "score": 100,
                      "category": "good"
                    },
                    "tags": {
                      "gg.tk.token": "test",
                      "kfi.tk.token": "qa-test"
                    },
                    "attributes": {
                      "protocols": [
                        "HTTP"
                      ],
                      "features": [
                        "rum"
                      ],
                      "isAvailabilityCheckPaused": false,
                      "extensions": {
                        "has_extension": true
                      }
                    }
                  }
                ],
                "pageInfo": {
                  "prevPage": "\u003cvalue\u003e",
                  "nextPage": "\u003cvalue\u003e"
                }
              }
            type: simple
    x-speakeasy-test-group: entities
  - workflowId: getEntityById
    steps:
      - stepId: test
        operationId: getEntityById
        parameters:
          - name: id
            in: path
            value: <id>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "id": "e-1234567890",
                "type": "SyslogHost",
                "name": "syslog-host-1",
                "displayName": "SyslogTest",
                "createdTime": "2024-11-25T16:38:24Z",
                "updatedTime": "2024-12-01T16:38:24Z",
                "lastSeenTime": "2024-11-25T16:38:24Z",
                "inMaintenance": false,
                "healthscore": {
                  "score": 100,
                  "category": "good"
                },
                "tags": {
                  "gg.tk.token": "test",
                  "kfi.tk.token": "qa-test"
                },
                "attributes": {
                  "protocols": [
                    "HTTP"
                  ],
                  "features": [
                    "rum"
                  ],
                  "isAvailabilityCheckPaused": false,
                  "extensions": {
                    "has_extension": true
                  }
                }
              }
            type: simple
    x-speakeasy-test-group: entities
  - workflowId: updateEntityById
    steps:
      - stepId: test
        operationId: updateEntityById
        parameters:
          - name: id
            in: path
            value: <id>
        requestBody:
          contentType: application/json
          payload:
            displayName: SyslogTest
            tags:
              gg.tk.token: test
              kfi.tk.token: qa-test
        successCriteria:
          - condition: $statusCode == 202
    x-speakeasy-test-group: entities
  - workflowId: searchLogs
    steps:
      - stepId: test
        operationId: searchLogs
        parameters:
          - name: direction
            in: query
            value: backward
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "logs": [
                  {
                    "id": "1793698955374546944",
                    "time": "2024-01-01T00:00:00Z",
                    "message": "This is a log message",
                    "hostname": "webserver.example.com",
                    "severity": "INFO",
                    "program": "httpd"
                  }
                ],
                "pageInfo": {
                  "prevPage": "\u003cvalue\u003e",
                  "nextPage": "\u003cvalue\u003e"
                }
              }
            type: simple
    x-speakeasy-test-group: logs
  - workflowId: listLogArchives
    steps:
      - stepId: test
        operationId: listLogArchives
        parameters:
          - name: startTime
            in: query
            value: <value>
          - name: endTime
            in: query
            value: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "logArchives": [
                  {
                    "id": "logs/138723/dt=2024-01-23/2024-01-23-08.json.gz",
                    "name": "2024-01-23-08.json.gz",
                    "downloadUrl": "https://ssp-log-archives.s3.amazonaws.com/logs/138723/dt%3D2024-01-23/2024-01-23-08.json.gz?X-Amz-Security-Token=IQ...",
                    "archivedTimestamp": "1706020985",
                    "archiveSize": 817226354
                  },
                  {
                    "id": "logs/138723/dt=2024-01-23/2024-01-23-08.json.gz",
                    "name": "2024-01-23-08.json.gz",
                    "downloadUrl": "https://ssp-log-archives.s3.amazonaws.com/logs/138723/dt%3D2024-01-23/2024-01-23-08.json.gz?X-Amz-Security-Token=IQ...",
                    "archivedTimestamp": "1706020985",
                    "archiveSize": 817226354
                  },
                  {
                    "id": "logs/138723/dt=2024-01-23/2024-01-23-08.json.gz",
                    "name": "2024-01-23-08.json.gz",
                    "downloadUrl": "https://ssp-log-archives.s3.amazonaws.com/logs/138723/dt%3D2024-01-23/2024-01-23-08.json.gz?X-Amz-Security-Token=IQ...",
                    "archivedTimestamp": "1706020985",
                    "archiveSize": 817226354
                  }
                ],
                "pageInfo": {
                  "prevPage": "\u003cvalue\u003e",
                  "nextPage": "\u003cvalue\u003e"
                }
              }
            type: simple
    x-speakeasy-test-group: logs
  - workflowId: listEntityTypes
    steps:
      - stepId: test
        operationId: listEntityTypes
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "types": [
                  "Service",
                  "ServiceInstance",
                  "KubernetesCluster"
                ]
              }
            type: simple
    x-speakeasy-test-group: metadata
  - workflowId: listMetricsForEntityType
    steps:
      - stepId: test
        operationId: listMetricsForEntityType
        parameters:
          - name: type
            in: path
            value: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "type": "KubernetesCluster",
                "metrics": [
                  {
                    "name": "composite.custom.system.disk.io.rate",
                    "displayName": "Disk IO rate",
                    "description": "Disk bytes transferred per second",
                    "units": "bytes/s",
                    "formula": "rate(system.disk.io[5m]",
                    "lastReportedTime": "2024-11-25T16:38:24Z"
                  }
                ]
              }
            type: simple
    x-speakeasy-test-group: metadata
  - workflowId: listMetrics
    steps:
      - stepId: test
        operationId: listMetrics
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "metricsInfo": [],
                "pageInfo": {
                  "prevPage": "\u003cvalue\u003e",
                  "nextPage": "\u003cvalue\u003e"
                }
              }
            type: simple
    x-speakeasy-test-group: metrics
  - workflowId: createCompositeMetric
    steps:
      - stepId: test
        operationId: createCompositeMetric
        requestBody:
          contentType: application/json
          payload:
            description: Disk bytes transferred per second
            displayName: Disk IO rate
            formula: rate(system.disk.io[5m])
            name: composite.custom.system.disk.io.rate
            units: bytes/s
        successCriteria:
          - condition: $statusCode == 201
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "name": "composite.custom.system.disk.io.rate",
                "displayName": "Disk IO rate",
                "description": "Disk bytes transferred per second",
                "formula": "rate(system.disk.io[5m])",
                "units": "bytes/s"
              }
            type: simple
    x-speakeasy-test-group: metrics
  - workflowId: listMultiMetricMeasurements
    steps:
      - stepId: test
        operationId: listMultiMetricMeasurements
        parameters:
          - name: forcePositional
            in: query
            value: false
        requestBody:
          contentType: application/json
          payload:
            metrics:
              - fillIfEmpty: false
                fillMethod: NONE
                filter: id:[id1,id2] category:moderate
                groupBy:
                  - query
                id: throughput-series
                name: dbo.host.queries.tput
                preGroupBy:
                  - host
                preGroupByMethod: SUM
                seriesType: TIMESERIES
              - fillIfEmpty: false
                fillMethod: NONE
                filter: id:[id1,id2] category:moderate
                groupBy:
                  - query
                id: throughput-series
                name: dbo.host.queries.tput
                preGroupBy:
                  - host
                preGroupByMethod: SUM
                seriesType: TIMESERIES
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "metrics": [],
                "pageInfo": {
                  "prevPage": "\u003cvalue\u003e",
                  "nextPage": "\u003cvalue\u003e"
                }
              }
            type: simple
    x-speakeasy-test-group: metrics
  - workflowId: updateCompositeMetric
    steps:
      - stepId: test
        operationId: updateCompositeMetric
        parameters:
          - name: name
            in: path
            value: <value>
        requestBody:
          contentType: application/json
          payload:
            description: Disk bytes transferred per second
            displayName: Disk IO rate
            formula: rate(system.disk.io[5m])
            units: bytes/s
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "name": "composite.custom.system.disk.io.rate",
                "displayName": "Disk IO rate",
                "description": "Disk bytes transferred per second",
                "formula": "rate(system.disk.io[5m])",
                "units": "bytes/s"
              }
            type: simple
    x-speakeasy-test-group: metrics
  - workflowId: deleteCompositeMetric
    steps:
      - stepId: test
        operationId: deleteCompositeMetric
        parameters:
          - name: name
            in: path
            value: <value>
        successCriteria:
          - condition: $statusCode == 204
    x-speakeasy-test-group: metrics
  - workflowId: getMetricByName
    steps:
      - stepId: test
        operationId: getMetricByName
        parameters:
          - name: name
            in: path
            value: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "name": "composite.custom.system.disk.io.rate",
                "displayName": "Disk IO rate",
                "description": "Disk bytes transferred per second",
                "units": "bytes/s",
                "formula": "rate(system.disk.io[5m]",
                "lastReportedTime": "2024-11-25T16:38:24Z"
              }
            type: simple
    x-speakeasy-test-group: metrics
  - workflowId: listMetricAttributes
    steps:
      - stepId: test
        operationId: listMetricAttributes
        parameters:
          - name: name
            in: path
            value: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "names": [],
                "pageInfo": {
                  "prevPage": "\u003cvalue\u003e",
                  "nextPage": "\u003cvalue\u003e"
                }
              }
            type: simple
    x-speakeasy-test-group: metrics
  - workflowId: listMetricAttributeValues
    steps:
      - stepId: test
        operationId: listMetricAttributeValues
        parameters:
          - name: name
            in: path
            value: <value>
          - name: attributeName
            in: path
            value: <value>
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "name": "\u003cvalue\u003e",
                "values": [],
                "pageInfo": {
                  "prevPage": "\u003cvalue\u003e",
                  "nextPage": "\u003cvalue\u003e"
                }
              }
            type: simple
    x-speakeasy-test-group: metrics
  - workflowId: listMetricMeasurements
    steps:
      - stepId: test
        operationId: listMetricMeasurements
        parameters:
          - name: name
            in: path
            value: <value>
          - name: seriesType
            in: query
            value: SCALAR
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "groupings": [
                  {
                    "attributes": [],
                    "measurements": [
                      {
                        "time": "2025-07-08T21:51:20.598Z",
                        "value": 7307.56
                      },
                      {
                        "time": "2023-05-07T22:33:23.333Z",
                        "value": 250.26
                      },
                      {
                        "time": "2023-06-20T08:27:21.001Z",
                        "value": 4929.43
                      }
                    ]
                  },
                  {
                    "attributes": [],
                    "measurements": []
                  }
                ],
                "bucketSizeInSeconds": 614937,
                "pageInfo": {
                  "prevPage": "\u003cvalue\u003e",
                  "nextPage": "\u003cvalue\u003e"
                }
              }
            type: simple
    x-speakeasy-test-group: metrics
  - workflowId: createToken
    steps:
      - stepId: test
        operationId: createToken
        requestBody:
          contentType: application/json
          payload:
            name: <value>
            tags:
              server: <value>
              tag_without_value: <value>
            type: ingestion
        successCriteria:
          - condition: $statusCode == 200
          - condition: $response.header.Content-Type == application/json
          - context: $response.body
            condition: |
              {
                "token": "\u003cvalue\u003e"
              }
            type: simple
    x-speakeasy-test-group: tokens
