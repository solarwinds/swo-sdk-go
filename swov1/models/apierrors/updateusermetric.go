// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package apierrors

import (
	"encoding/json"
	"fmt"
	"github.com/solarwinds/swo-sdk-go/swov1/models/components"
)

type UpdateUserMetricMetricsResponseCode string

const (
	UpdateUserMetricMetricsResponseCodeInternalServerError UpdateUserMetricMetricsResponseCode = "InternalServerError"
)

func (e UpdateUserMetricMetricsResponseCode) ToPointer() *UpdateUserMetricMetricsResponseCode {
	return &e
}
func (e *UpdateUserMetricMetricsResponseCode) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "InternalServerError":
		*e = UpdateUserMetricMetricsResponseCode(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateUserMetricMetricsResponseCode: %v", v)
	}
}

// UpdateUserMetricMetricsResponse500ResponseBody - Server error
type UpdateUserMetricMetricsResponse500ResponseBody struct {
	Code     UpdateUserMetricMetricsResponseCode `json:"code"`
	Message  string                              `json:"message"`
	HTTPMeta components.HTTPMetadata             `json:"-"`
}

var _ error = &UpdateUserMetricMetricsResponse500ResponseBody{}

func (e *UpdateUserMetricMetricsResponse500ResponseBody) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

type UpdateUserMetricMetricsCode string

const (
	UpdateUserMetricMetricsCodeNotFound UpdateUserMetricMetricsCode = "NotFound"
)

func (e UpdateUserMetricMetricsCode) ToPointer() *UpdateUserMetricMetricsCode {
	return &e
}
func (e *UpdateUserMetricMetricsCode) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NotFound":
		*e = UpdateUserMetricMetricsCode(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateUserMetricMetricsCode: %v", v)
	}
}

// UpdateUserMetricMetricsResponseResponseBody - The server cannot find the requested resource.
type UpdateUserMetricMetricsResponseResponseBody struct {
	Code     UpdateUserMetricMetricsCode `json:"code"`
	Message  string                      `json:"message"`
	HTTPMeta components.HTTPMetadata     `json:"-"`
}

var _ error = &UpdateUserMetricMetricsResponseResponseBody{}

func (e *UpdateUserMetricMetricsResponseResponseBody) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// UpdateUserMetricMetricsResponseBody - Access is forbidden.
type UpdateUserMetricMetricsResponseBody struct {
	// HTTP status code as defined in RFC 2817
	Code int64 `json:"code"`
	// Supporting description of the error
	Message  string                  `json:"message"`
	Target   *string                 `json:"target,omitempty"`
	HTTPMeta components.HTTPMetadata `json:"-"`
}

var _ error = &UpdateUserMetricMetricsResponseBody{}

func (e *UpdateUserMetricMetricsResponseBody) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

type UpdateUserMetricCode string

const (
	UpdateUserMetricCodeUnauthorized UpdateUserMetricCode = "Unauthorized"
)

func (e UpdateUserMetricCode) ToPointer() *UpdateUserMetricCode {
	return &e
}
func (e *UpdateUserMetricCode) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Unauthorized":
		*e = UpdateUserMetricCode(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateUserMetricCode: %v", v)
	}
}

// UpdateUserMetricResponseBody - Access is unauthorized.
type UpdateUserMetricResponseBody struct {
	Code     UpdateUserMetricCode    `json:"code"`
	Message  string                  `json:"message"`
	HTTPMeta components.HTTPMetadata `json:"-"`
}

var _ error = &UpdateUserMetricResponseBody{}

func (e *UpdateUserMetricResponseBody) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
