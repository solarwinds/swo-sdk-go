// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package tests

import (
	"context"
	"github.com/solarwinds/swo-sdk-go/swov1"
	"github.com/solarwinds/swo-sdk-go/swov1/internal/utils"
	"github.com/solarwinds/swo-sdk-go/swov1/models/components"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
)

func TestTokens_CreateToken(t *testing.T) {
	ctx := context.Background()

	testHTTPClient := createTestHTTPClient("createToken")

	s := swov1.New(
		swov1.WithServerURL(utils.GetEnv("TEST_SERVER_URL", "http://localhost:18080")),
		swov1.WithClient(testHTTPClient),
		swov1.WithSecurity(utils.GetEnv("SWO_API_TOKEN", "value")),
	)

	res, err := s.Tokens.CreateToken(ctx, components.CreateTokenRequest{
		Name: "<value>",
		Tags: components.Tags{
			Server:          "<value>",
			TagWithoutValue: "<value>",
		},
		Type: components.CreateTokenRequestTypeIngestion,
	})
	require.NoError(t, err)
	assert.Equal(t, 200, res.HTTPMeta.Response.StatusCode)
	assert.NotNil(t, res.CreateTokenResponse)
	assert.Equal(t, &components.CreateTokenResponse{
		Token: "<value>",
	}, res.CreateTokenResponse)

}
