// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package handler

import (
	"context"
	"mockserver/internal/logging"
	"mockserver/internal/tracking"
	"net/http"
)

// GeneratedHandlers returns all generated handlers.
func GeneratedHandlers(ctx context.Context, dir *logging.HTTPFileDirectory, rt *tracking.RequestTracker) []*GeneratedHandler {
	return []*GeneratedHandler{
		NewGeneratedHandler(ctx, http.MethodDelete, "/v1/dbo/databases/{entityId}", pathDeleteV1DboDatabasesEntityID(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodDelete, "/v1/dem/websites/{entityId}", pathDeleteV1DemWebsitesEntityID(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodDelete, "/v1/metrics/{name}", pathDeleteV1MetricsName(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodGet, "/v1/cloud/aws/controlTower/validateOnboarding", pathGetV1CloudAwsControlTowerValidateOnboarding(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodGet, "/v1/dbo/databases/credentials/public-key", pathGetV1DboDatabasesCredentialsPublicKey(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodGet, "/v1/dbo/databases/{entityId}/pluginConfig", pathGetV1DboDatabasesEntityIDPluginConfig(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodGet, "/v1/dbo/databases/{entityId}/plugins", pathGetV1DboDatabasesEntityIDPlugins(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodGet, "/v1/dem/settings", pathGetV1DemSettings(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodGet, "/v1/dem/websites/{entityId}", pathGetV1DemWebsitesEntityID(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodGet, "/v1/entities", pathGetV1Entities(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodGet, "/v1/entities/{id}", pathGetV1EntitiesID(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodGet, "/v1/logs", pathGetV1Logs(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodGet, "/v1/logs/archives", pathGetV1LogsArchives(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodGet, "/v1/metadata/entities/types", pathGetV1MetadataEntitiesTypes(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodGet, "/v1/metadata/entities/types/{type}/metrics", pathGetV1MetadataEntitiesTypesTypeMetrics(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodGet, "/v1/metrics", pathGetV1Metrics(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodGet, "/v1/metrics/{name}", pathGetV1MetricsName(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodGet, "/v1/metrics/{name}/attributes", pathGetV1MetricsNameAttributes(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodGet, "/v1/metrics/{name}/attributes/{attributeName}", pathGetV1MetricsNameAttributesAttributeName(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodGet, "/v1/metrics/{name}/measurements", pathGetV1MetricsNameMeasurements(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodPatch, "/v1/dbo/databases/{entityId}", pathPatchV1DboDatabasesEntityID(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodPost, "/v1/changeevents", pathPostV1Changeevents(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodPost, "/v1/cloud/aws/controlTower/activate", pathPostV1CloudAwsControlTowerActivate(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodPost, "/v1/cloud/aws/controlTower/createOrgStructure", pathPostV1CloudAwsControlTowerCreateOrgStructure(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodPost, "/v1/cloud/aws/controlTower/update", pathPostV1CloudAwsControlTowerUpdate(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodPost, "/v1/dbo/databases", pathPostV1DboDatabases(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodPost, "/v1/dbo/databases/{entityId}/plugins/operation/{operation}", pathPostV1DboDatabasesEntityIDPluginsOperationOperation(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodPost, "/v1/dem/websites", pathPostV1DemWebsites(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodPost, "/v1/metrics", pathPostV1Metrics(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodPost, "/v1/metrics/measurements", pathPostV1MetricsMeasurements(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodPost, "/v1/tokens", pathPostV1Tokens(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodPut, "/v1/dem/settings", pathPutV1DemSettings(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodPut, "/v1/dem/websites/{entityId}", pathPutV1DemWebsitesEntityID(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodPut, "/v1/dem/websites/{entityId}/pauseMonitoring", pathPutV1DemWebsitesEntityIDPauseMonitoring(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodPut, "/v1/dem/websites/{entityId}/unpauseMonitoring", pathPutV1DemWebsitesEntityIDUnpauseMonitoring(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodPut, "/v1/entities/{id}", pathPutV1EntitiesID(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodPut, "/v1/metrics/{name}", pathPutV1MetricsName(dir, rt)),
	}
}
