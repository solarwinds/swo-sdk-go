// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package sdkerrors

import (
	"encoding/json"
	"mockserver/internal/sdk/models/components"
)

// UpdateCompositeMetricNotFoundError - The server cannot find the requested resource.
type UpdateCompositeMetricNotFoundError struct {
	// Uniquely identifies an error condition.
	Code *components.CommonDefaultErrorCode `json:"code,omitempty"`
	// Supporting description of the error
	Message string `json:"message"`
	// Indicates the invalid field
	Target   *string                 `json:"target,omitempty"`
	HTTPMeta components.HTTPMetadata `json:"-"`
}

var _ error = &UpdateCompositeMetricNotFoundError{}

func (e *UpdateCompositeMetricNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// UpdateCompositeMetricForbiddenError - Access is forbidden.
type UpdateCompositeMetricForbiddenError struct {
	// Uniquely identifies an error condition.
	Code *components.MetricsMetricErrorCode `json:"code,omitempty"`
	// Supporting description of the error
	Message string `json:"message"`
	// Indicates the invalid field
	Target   *string                 `json:"target,omitempty"`
	HTTPMeta components.HTTPMetadata `json:"-"`
}

var _ error = &UpdateCompositeMetricForbiddenError{}

func (e *UpdateCompositeMetricForbiddenError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// UpdateCompositeMetricBadRequestError - The server could not understand the request due to invalid syntax.
type UpdateCompositeMetricBadRequestError struct {
	// Uniquely identifies an error condition.
	Code *components.CommonDefaultErrorCode `json:"code,omitempty"`
	// Supporting description of the error
	Message string `json:"message"`
	// Indicates the invalid field
	Target   *string                 `json:"target,omitempty"`
	HTTPMeta components.HTTPMetadata `json:"-"`
}

var _ error = &UpdateCompositeMetricBadRequestError{}

func (e *UpdateCompositeMetricBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
