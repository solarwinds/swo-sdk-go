// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
	"mockserver/internal/sdk/utils"
)

// CaptureMethod - Method for capturing metrics from database server: sniff/profiler/slow-log/poll, ignored for SqlServer and Redis
type CaptureMethod string

const (
	CaptureMethodSniffer  CaptureMethod = "sniffer"
	CaptureMethodPoll     CaptureMethod = "poll"
	CaptureMethodProfiler CaptureMethod = "profiler"
	CaptureMethodSlowLog  CaptureMethod = "slow-log"
)

func (e CaptureMethod) ToPointer() *CaptureMethod {
	return &e
}
func (e *CaptureMethod) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "sniffer":
		fallthrough
	case "poll":
		fallthrough
	case "profiler":
		fallthrough
	case "slow-log":
		*e = CaptureMethod(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CaptureMethod: %v", v)
	}
}

type ObserveDatabaseRequest struct {
	// Name for the observed database entity
	Name string `json:"name"`
	// Swo Agent ID wehre the plugins for observing database server should run
	AgentID string `json:"agentId"`
	// Database server type: mysql/mongo/mssql/pgsql/redis
	DbType DatabaseType `json:"dbType"`
	// Auth method to be used by the agent to connect to database server
	AuthMethod DatabaseAuthMethod `json:"authMethod"`
	// Method for capturing metrics from database server: sniff/profiler/slow-log/poll, ignored for SqlServer and Redis
	CaptureMethod *CaptureMethod `default:"null" json:"captureMethod"`
	// Optional advanced configuration options for plugins, e.g. disable-sampling
	ConfigOptions []CommonKeyValuePair `json:"configOptions"`
	// Options specifying how plugins connect to database server
	DbConnOptions DatabaseConnectionOptions `json:"dbConnOptions"`
	// Tags for observed database entity
	Tags []CommonKeyValuePair `json:"tags"`
}

func (o ObserveDatabaseRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(o, "", false)
}

func (o *ObserveDatabaseRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &o, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ObserveDatabaseRequest) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *ObserveDatabaseRequest) GetAgentID() string {
	if o == nil {
		return ""
	}
	return o.AgentID
}

func (o *ObserveDatabaseRequest) GetDbType() DatabaseType {
	if o == nil {
		return DatabaseType("")
	}
	return o.DbType
}

func (o *ObserveDatabaseRequest) GetAuthMethod() DatabaseAuthMethod {
	if o == nil {
		return DatabaseAuthMethod("")
	}
	return o.AuthMethod
}

func (o *ObserveDatabaseRequest) GetCaptureMethod() *CaptureMethod {
	if o == nil {
		return nil
	}
	return o.CaptureMethod
}

func (o *ObserveDatabaseRequest) GetConfigOptions() []CommonKeyValuePair {
	if o == nil {
		return nil
	}
	return o.ConfigOptions
}

func (o *ObserveDatabaseRequest) GetDbConnOptions() DatabaseConnectionOptions {
	if o == nil {
		return DatabaseConnectionOptions{}
	}
	return o.DbConnOptions
}

func (o *ObserveDatabaseRequest) GetTags() []CommonKeyValuePair {
	if o == nil {
		return nil
	}
	return o.Tags
}
