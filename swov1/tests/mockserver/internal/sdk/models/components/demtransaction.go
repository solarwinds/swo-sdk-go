// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type DemTransaction struct {
	// Name of the transaction, which must be unique within the organization. The name must not contain any control characters, any white space other than space (U+0020), or any consecutive, leading or trailing spaces.
	Name string `json:"name"`
	// Description of the transaction.
	Description *string `json:"description,omitempty"`
	// Id of a related entity to which the transaction is connected.
	RelatedEntityID *string `json:"relatedEntityId,omitempty"`
	// Test definition for the transaction.
	TestDefinition DemTransactionTestDefinition `json:"testDefinition"`
	// Entity tags. Tag is a key-value pair, where there may be only single tag value for the same key.
	Tags []CommonTag `json:"tags,omitempty"`
}

func (o *DemTransaction) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *DemTransaction) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *DemTransaction) GetRelatedEntityID() *string {
	if o == nil {
		return nil
	}
	return o.RelatedEntityID
}

func (o *DemTransaction) GetTestDefinition() DemTransactionTestDefinition {
	if o == nil {
		return DemTransactionTestDefinition{}
	}
	return o.TestDefinition
}

func (o *DemTransaction) GetTags() []CommonTag {
	if o == nil {
		return nil
	}
	return o.Tags
}
