// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
	"mockserver/internal/sdk/utils"
)

// DboDatabaseSslOptionsSslMode - SSL mode such as require, verify-ca, verify-full as applicable
type DboDatabaseSslOptionsSslMode string

const (
	DboDatabaseSslOptionsSslModeRequire    DboDatabaseSslOptionsSslMode = "require"
	DboDatabaseSslOptionsSslModeVerifyCa   DboDatabaseSslOptionsSslMode = "verify-ca"
	DboDatabaseSslOptionsSslModeVerifyFull DboDatabaseSslOptionsSslMode = "verify-full"
)

func (e DboDatabaseSslOptionsSslMode) ToPointer() *DboDatabaseSslOptionsSslMode {
	return &e
}
func (e *DboDatabaseSslOptionsSslMode) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "require":
		fallthrough
	case "verify-ca":
		fallthrough
	case "verify-full":
		*e = DboDatabaseSslOptionsSslMode(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DboDatabaseSslOptionsSslMode: %v", v)
	}
}

type DboDatabaseSslOptions struct {
	// SSL mode such as require, verify-ca, verify-full as applicable
	SslMode *DboDatabaseSslOptionsSslMode `default:"require" json:"sslMode"`
	// CA file path
	SslCAPath *string `default:"" json:"sslCAPath"`
	// SSL key file path
	SslKeyPath *string `default:"" json:"sslKeyPath"`
	// SSL cert file path
	SslCertPath *string `default:"" json:"sslCertPath"`
}

func (d DboDatabaseSslOptions) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(d, "", false)
}

func (d *DboDatabaseSslOptions) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &d, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *DboDatabaseSslOptions) GetSslMode() *DboDatabaseSslOptionsSslMode {
	if o == nil {
		return nil
	}
	return o.SslMode
}

func (o *DboDatabaseSslOptions) GetSslCAPath() *string {
	if o == nil {
		return nil
	}
	return o.SslCAPath
}

func (o *DboDatabaseSslOptions) GetSslKeyPath() *string {
	if o == nil {
		return nil
	}
	return o.SslKeyPath
}

func (o *DboDatabaseSslOptions) GetSslCertPath() *string {
	if o == nil {
		return nil
	}
	return o.SslCertPath
}
