// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package tests

import (
	"context"
	"github.com/solarwinds/swo-sdk-go/swov1"
	"github.com/solarwinds/swo-sdk-go/swov1/internal/utils"
	"github.com/solarwinds/swo-sdk-go/swov1/models/components"
	"github.com/solarwinds/swo-sdk-go/swov1/models/operations"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
)

func TestLogs_SearchLogs(t *testing.T) {
	ctx := context.Background()

	testHTTPClient := createTestHTTPClient("searchLogs")

	s := swov1.New(
		swov1.WithServerURL(utils.GetEnv("TEST_SERVER_URL", "http://localhost:18080")),
		swov1.WithClient(testHTTPClient),
		swov1.WithSecurity(utils.GetEnv("SWO_API_TOKEN", "value")),
	)

	res, err := s.Logs.SearchLogs(ctx, operations.SearchLogsRequest{})
	require.NoError(t, err)
	assert.Equal(t, 200, res.HTTPMeta.Response.StatusCode)
	assert.NotNil(t, res.Object)
	assert.Equal(t, &operations.SearchLogsResponseBody{
		Logs: []components.LogsEvent{
			components.LogsEvent{
				ID:       "1793698955374546944",
				Time:     "2024-01-01T00:00:00Z",
				Message:  "This is a log message",
				Hostname: "webserver.example.com",
				Severity: "INFO",
				Program:  "httpd",
			},
		},
		PageInfo: components.CommonPageInfo{
			PrevPage: "<value>",
			NextPage: "<value>",
		},
	}, res.Object)

}

func TestLogs_ListLogArchives(t *testing.T) {
	ctx := context.Background()

	testHTTPClient := createTestHTTPClient("listLogArchives")

	s := swov1.New(
		swov1.WithServerURL(utils.GetEnv("TEST_SERVER_URL", "http://localhost:18080")),
		swov1.WithClient(testHTTPClient),
		swov1.WithSecurity(utils.GetEnv("SWO_API_TOKEN", "value")),
	)

	res, err := s.Logs.ListLogArchives(ctx, operations.ListLogArchivesRequest{
		StartTime: "<value>",
		EndTime:   "<value>",
	})
	require.NoError(t, err)
	assert.Equal(t, 200, res.HTTPMeta.Response.StatusCode)
	assert.NotNil(t, res.Object)
	assert.Equal(t, &operations.ListLogArchivesResponseBody{
		LogArchives: []components.LogsArchive{
			components.LogsArchive{
				ID:                "logs/138723/dt=2024-01-23/2024-01-23-08.json.gz",
				Name:              "2024-01-23-08.json.gz",
				DownloadURL:       "https://ssp-log-archives.s3.amazonaws.com/logs/138723/dt%3D2024-01-23/2024-01-23-08.json.gz?X-Amz-Security-Token=IQ...",
				ArchivedTimestamp: "1706020985",
				ArchiveSize:       817226354,
			},
			components.LogsArchive{
				ID:                "logs/138723/dt=2024-01-23/2024-01-23-08.json.gz",
				Name:              "2024-01-23-08.json.gz",
				DownloadURL:       "https://ssp-log-archives.s3.amazonaws.com/logs/138723/dt%3D2024-01-23/2024-01-23-08.json.gz?X-Amz-Security-Token=IQ...",
				ArchivedTimestamp: "1706020985",
				ArchiveSize:       817226354,
			},
			components.LogsArchive{
				ID:                "logs/138723/dt=2024-01-23/2024-01-23-08.json.gz",
				Name:              "2024-01-23-08.json.gz",
				DownloadURL:       "https://ssp-log-archives.s3.amazonaws.com/logs/138723/dt%3D2024-01-23/2024-01-23-08.json.gz?X-Amz-Security-Token=IQ...",
				ArchivedTimestamp: "1706020985",
				ArchiveSize:       817226354,
			},
		},
		PageInfo: components.CommonPageInfo{
			PrevPage: "<value>",
			NextPage: "<value>",
		},
	}, res.Object)

}
