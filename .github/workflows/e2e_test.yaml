name: E2E Tests
on:
  pull_request:
    branches:
      - main
    paths:
      - swov1/**
  workflow_dispatch:
  workflow_call:
    secrets:
      SWO_STAGE_API_TOKEN:
        required: true
    inputs:
      PUBLIC_SWO_API_STAGE_URL:
        required: true
        type: string
      QUERY_START_TIME:
        required: false
        type: string
      QUERY_END_TIME:
        required: false
        type: string
jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    container:
      image: golang:1.22-alpine
    env:
      SWO_STAGE_API_TOKEN: ${{ secrets.SWO_STAGE_API_TOKEN }}
      PUBLIC_SWO_API_STAGE_URL: ${{ vars.PUBLIC_SWO_API_STAGE_URL }}
      QUERY_START_TIME: ${{ inputs.QUERY_START_TIME }}
      QUERY_END_TIME: ${{ inputs.QUERY_END_TIME }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Download generated files
        uses: actions/download-artifact@v4
        with:
          name: generated-files
          path: swov1/
      - name: Set QUERY_START_TIME and QUERY_END_TIME if unset
        run: |
          if [ -z "$QUERY_START_TIME" ]; then
            export QUERY_START_TIME=$(date -u -d "@$(( $(date +%s) - 6*3600 - 60 ))" +%Y-%m-%dT%H:%M:%SZ)
            echo "QUERY_START_TIME=$QUERY_START_TIME" >> $GITHUB_ENV
          fi
          if [ -z "$QUERY_END_TIME" ]; then
            export QUERY_END_TIME=$(date -u -d "@$(( $(date +%s) - 60 ))" +%Y-%m-%dT%H:%M:%SZ)
            echo "QUERY_END_TIME=$QUERY_END_TIME" >> $GITHUB_ENV
          fi
      - name: Run E2E tests
        run: |
          cd swov1
          go test -v ./tests