{"openapi":"3.0.0","info":{"title":"SolarWinds Observability","contact":{"name":"SolarWinds Support","url":"https://support.solarwinds.com","email":"technicalsupport@solarwinds.com"},"license":{"name":"SolarWinds Software Services Agreement","url":"https://www.solarwinds.com/legal/software-services-agreement"},"description":"SolarWinds Observability REST API\n[Rest API Documentation](https://documentation.solarwinds.com/en/success_center/observability/content/api/api-swagger.htm)","version":"1.0.9"},"tags":[{"name":"changeEvents"},{"name":"cloudAccounts"},{"name":"dem"},{"name":"entities"},{"name":"logs"},{"name":"metrics"},{"name":"metadata"},{"name":"tokens"},{"name":"dbo"}],"paths":{"/v1/changeevents":{"post":{"operationId":"createChangeEvent","summary":"Create an event","parameters":[],"responses":{"202":{"description":"The ID of the created event","content":{"application/json":{"schema":{"type":"object","required":["id"],"properties":{"id":{"type":"integer","format":"int64","readOnly":true}}}}}}},"tags":["changeEvents"],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ChangeEvents.ChangeEvent"}}},"description":"The created change event"}}},"/v1/cloud/aws/controlTower/activate":{"post":{"operationId":"activateAwsIntegration","summary":"Activate AWS Integration","description":"Activate AWS Integration.","parameters":[],"responses":{"200":{"description":"The request has succeeded."},"400":{"description":"The server could not understand the request due to invalid syntax.","content":{"application/json":{"schema":{"type":"object","required":["message"],"properties":{"code":{"allOf":[{"$ref":"#/components/schemas/Common.DefaultErrorCode"}],"description":"Uniquely identifies an error condition."},"message":{"type":"string","description":"Supporting description of the error","example":"Error has occurred."},"target":{"type":"string","description":"Indicates the invalid field"}}}}}},"401":{"description":"Access is unauthorized.","content":{"application/json":{"schema":{"type":"object","required":["message"],"properties":{"code":{"allOf":[{"$ref":"#/components/schemas/Common.DefaultErrorCode"}],"description":"Uniquely identifies an error condition."},"message":{"type":"string","description":"Supporting description of the error","example":"Error has occurred."},"target":{"type":"string","description":"Indicates the invalid field"}}}}}},"404":{"description":"The server cannot find the requested resource.","content":{"application/json":{"schema":{"type":"object","required":["message"],"properties":{"code":{"allOf":[{"$ref":"#/components/schemas/Common.DefaultErrorCode"}],"description":"Uniquely identifies an error condition."},"message":{"type":"string","description":"Supporting description of the error","example":"Error has occurred."},"target":{"type":"string","description":"Indicates the invalid field"}}}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{"type":"object","required":["message"],"properties":{"code":{"allOf":[{"$ref":"#/components/schemas/Common.DefaultErrorCode"}],"description":"Uniquely identifies an error condition."},"message":{"type":"string","description":"Supporting description of the error","example":"Error has occurred."},"target":{"type":"string","description":"Indicates the invalid field"}}}}}}},"tags":["cloudAccounts"],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CloudAccounts.AwsActivateIntegrationRequest"}}}}}},"/v1/cloud/aws/controlTower/createOrgStructure":{"post":{"operationId":"createOrgStructure","summary":"Create Organizational Structure","description":"Create AWS Organizational Structure.","parameters":[],"responses":{"200":{"description":"The request has succeeded."},"400":{"description":"The server could not understand the request due to invalid syntax.","content":{"application/json":{"schema":{"type":"object","required":["message"],"properties":{"code":{"allOf":[{"$ref":"#/components/schemas/Common.DefaultErrorCode"}],"description":"Uniquely identifies an error condition."},"message":{"type":"string","description":"Supporting description of the error","example":"Error has occurred."},"target":{"type":"string","description":"Indicates the invalid field"}}}}}},"401":{"description":"Access is unauthorized.","content":{"application/json":{"schema":{"type":"object","required":["message"],"properties":{"code":{"allOf":[{"$ref":"#/components/schemas/Common.DefaultErrorCode"}],"description":"Uniquely identifies an error condition."},"message":{"type":"string","description":"Supporting description of the error","example":"Error has occurred."},"target":{"type":"string","description":"Indicates the invalid field"}}}}}},"404":{"description":"The server cannot find the requested resource.","content":{"application/json":{"schema":{"type":"object","required":["message"],"properties":{"code":{"allOf":[{"$ref":"#/components/schemas/Common.DefaultErrorCode"}],"description":"Uniquely identifies an error condition."},"message":{"type":"string","description":"Supporting description of the error","example":"Error has occurred."},"target":{"type":"string","description":"Indicates the invalid field"}}}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{"type":"object","required":["message"],"properties":{"code":{"allOf":[{"$ref":"#/components/schemas/Common.DefaultErrorCode"}],"description":"Uniquely identifies an error condition."},"message":{"type":"string","description":"Supporting description of the error","example":"Error has occurred."},"target":{"type":"string","description":"Indicates the invalid field"}}}}}}},"tags":["cloudAccounts"],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CloudAccounts.AwsOrganisationalUnitRequest"}}}}}},"/v1/cloud/aws/controlTower/update":{"post":{"operationId":"updateAwsIntegration","summary":"Update AWS Integration","description":"Update AWS Integration details.","parameters":[],"responses":{"200":{"description":"The request has succeeded.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CloudAccounts.AwsUpdateIntegrationResponse"}}}},"400":{"description":"The server could not understand the request due to invalid syntax.","content":{"application/json":{"schema":{"type":"object","required":["message"],"properties":{"code":{"allOf":[{"$ref":"#/components/schemas/Common.DefaultErrorCode"}],"description":"Uniquely identifies an error condition."},"message":{"type":"string","description":"Supporting description of the error","example":"Error has occurred."},"target":{"type":"string","description":"Indicates the invalid field"}}}}}},"401":{"description":"Access is unauthorized.","content":{"application/json":{"schema":{"type":"object","required":["message"],"properties":{"code":{"allOf":[{"$ref":"#/components/schemas/Common.DefaultErrorCode"}],"description":"Uniquely identifies an error condition."},"message":{"type":"string","description":"Supporting description of the error","example":"Error has occurred."},"target":{"type":"string","description":"Indicates the invalid field"}}}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{"type":"object","required":["message"],"properties":{"code":{"allOf":[{"$ref":"#/components/schemas/Common.DefaultErrorCode"}],"description":"Uniquely identifies an error condition."},"message":{"type":"string","description":"Supporting description of the error","example":"Error has occurred."},"target":{"type":"string","description":"Indicates the invalid field"}}}}}}},"tags":["cloudAccounts"],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CloudAccounts.AwsUpdateIntegrationRequest"}}}}}},"/v1/cloud/aws/controlTower/validateOnboarding":{"get":{"operationId":"validateMgmtAccountOnboarding","summary":"Validate Management Account Onboarding","description":"Validate if the management account is onboarded.","parameters":[{"name":"request","in":"query","required":true,"schema":{"$ref":"#/components/schemas/CloudAccounts.AwsMgmtAccountOnboardingRequest"},"explode":false}],"responses":{"200":{"description":"The request has succeeded.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CloudAccounts.AwsMgmtAccountOnboardingResponse"}}}},"400":{"description":"The server could not understand the request due to invalid syntax.","content":{"application/json":{"schema":{"type":"object","required":["message"],"properties":{"code":{"allOf":[{"$ref":"#/components/schemas/Common.DefaultErrorCode"}],"description":"Uniquely identifies an error condition."},"message":{"type":"string","description":"Supporting description of the error","example":"Error has occurred."},"target":{"type":"string","description":"Indicates the invalid field"}}}}}},"401":{"description":"Access is unauthorized.","content":{"application/json":{"schema":{"type":"object","required":["message"],"properties":{"code":{"allOf":[{"$ref":"#/components/schemas/Common.DefaultErrorCode"}],"description":"Uniquely identifies an error condition."},"message":{"type":"string","description":"Supporting description of the error","example":"Error has occurred."},"target":{"type":"string","description":"Indicates the invalid field"}}}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{"type":"object","required":["message"],"properties":{"code":{"allOf":[{"$ref":"#/components/schemas/Common.DefaultErrorCode"}],"description":"Uniquely identifies an error condition."},"message":{"type":"string","description":"Supporting description of the error","example":"Error has occurred."},"target":{"type":"string","description":"Indicates the invalid field"}}}}}}},"tags":["cloudAccounts"]}},"/v1/dbo/databases":{"post":{"operationId":"observeDatabase","summary":"Add database observability to a database","parameters":[],"responses":{"201":{"description":"The request has succeeded and a new resource has been created as a result.","content":{"application/json":{"schema":{"type":"object","required":["id"],"properties":{"id":{"type":"string","readOnly":true}}}}}},"400":{"description":"The server could not understand the request due to invalid syntax.","content":{"application/json":{"schema":{"type":"object","required":["message"],"properties":{"code":{"allOf":[{"$ref":"#/components/schemas/Common.DefaultErrorCode"}],"description":"Uniquely identifies an error condition."},"message":{"type":"string","description":"Supporting description of the error","example":"Error has occurred."},"target":{"type":"string","description":"Indicates the invalid field"}}}}}}},"tags":["dbo"],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Dbo.ObserveDatabaseRequest"}}}}}},"/v1/dbo/databases/credentials/public-key":{"get":{"operationId":"getPublicKey","summary":"Get public key for encrypting database credentials locally","parameters":[],"responses":{"200":{"description":"The request has succeeded.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Dbo.DatabaseCredentialsPublicKeyResponse"}}}},"400":{"description":"The server could not understand the request due to invalid syntax.","content":{"application/json":{"schema":{"type":"object","required":["message"],"properties":{"code":{"allOf":[{"$ref":"#/components/schemas/Common.DefaultErrorCode"}],"description":"Uniquely identifies an error condition."},"message":{"type":"string","description":"Supporting description of the error","example":"Error has occurred."},"target":{"type":"string","description":"Indicates the invalid field"}}}}}},"404":{"description":"The server cannot find the requested resource.","content":{"application/json":{"schema":{"type":"object","required":["message"],"properties":{"code":{"allOf":[{"$ref":"#/components/schemas/Common.DefaultErrorCode"}],"description":"Uniquely identifies an error condition."},"message":{"type":"string","description":"Supporting description of the error","example":"Error has occurred."},"target":{"type":"string","description":"Indicates the invalid field"}}}}}}},"tags":["dbo"]}},"/v1/dbo/databases/{entityId}":{"patch":{"operationId":"updateDatabase","summary":"Update an observed database","parameters":[{"$ref":"#/components/parameters/Common.EntityIdParam"}],"responses":{"204":{"description":"There is no content to send for this request, but the headers may be useful."},"400":{"description":"The server could not understand the request due to invalid syntax.","content":{"application/json":{"schema":{"type":"object","required":["message"],"properties":{"code":{"allOf":[{"$ref":"#/components/schemas/Common.DefaultErrorCode"}],"description":"Uniquely identifies an error condition."},"message":{"type":"string","description":"Supporting description of the error","example":"Error has occurred."},"target":{"type":"string","description":"Indicates the invalid field"}}}}}},"404":{"description":"The server cannot find the requested resource.","content":{"application/json":{"schema":{"type":"object","required":["message"],"properties":{"code":{"allOf":[{"$ref":"#/components/schemas/Common.DefaultErrorCode"}],"description":"Uniquely identifies an error condition."},"message":{"type":"string","description":"Supporting description of the error","example":"Error has occurred."},"target":{"type":"string","description":"Indicates the invalid field"}}}}}}},"tags":["dbo"],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Dbo.UpdateDatabaseRequest"}}}}},"delete":{"operationId":"deleteDatabase","summary":"Delete an observed database","parameters":[{"$ref":"#/components/parameters/Common.EntityIdParam"}],"responses":{"204":{"description":"There is no content to send for this request, but the headers may be useful."},"400":{"description":"The server could not understand the request due to invalid syntax.","content":{"application/json":{"schema":{"type":"object","required":["message"],"properties":{"code":{"allOf":[{"$ref":"#/components/schemas/Common.DefaultErrorCode"}],"description":"Uniquely identifies an error condition."},"message":{"type":"string","description":"Supporting description of the error","example":"Error has occurred."},"target":{"type":"string","description":"Indicates the invalid field"}}}}}},"404":{"description":"The server cannot find the requested resource.","content":{"application/json":{"schema":{"type":"object","required":["message"],"properties":{"code":{"allOf":[{"$ref":"#/components/schemas/Common.DefaultErrorCode"}],"description":"Uniquely identifies an error condition."},"message":{"type":"string","description":"Supporting description of the error","example":"Error has occurred."},"target":{"type":"string","description":"Indicates the invalid field"}}}}}}},"tags":["dbo"]}},"/v1/dbo/databases/{entityId}/pluginConfig":{"get":{"operationId":"getPluginConfig","summary":"Get configuration of plugins observing a database","parameters":[{"$ref":"#/components/parameters/Common.EntityIdParam"}],"responses":{"200":{"description":"The request has succeeded.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Dbo.DatabasePluginConfigResponse"}}}},"400":{"description":"The server could not understand the request due to invalid syntax.","content":{"application/json":{"schema":{"type":"object","required":["message"],"properties":{"code":{"allOf":[{"$ref":"#/components/schemas/Common.DefaultErrorCode"}],"description":"Uniquely identifies an error condition."},"message":{"type":"string","description":"Supporting description of the error","example":"Error has occurred."},"target":{"type":"string","description":"Indicates the invalid field"}}}}}},"404":{"description":"The server cannot find the requested resource.","content":{"application/json":{"schema":{"type":"object","required":["message"],"properties":{"code":{"allOf":[{"$ref":"#/components/schemas/Common.DefaultErrorCode"}],"description":"Uniquely identifies an error condition."},"message":{"type":"string","description":"Supporting description of the error","example":"Error has occurred."},"target":{"type":"string","description":"Indicates the invalid field"}}}}}}},"tags":["dbo"]}},"/v1/dbo/databases/{entityId}/plugins":{"get":{"operationId":"getPlugins","summary":"Get status of plugins observing a database","parameters":[{"$ref":"#/components/parameters/Common.EntityIdParam"}],"responses":{"200":{"description":"The request has succeeded.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Dbo.DatabasePluginStatusResponse"}}}},"400":{"description":"The server could not understand the request due to invalid syntax.","content":{"application/json":{"schema":{"type":"object","required":["message"],"properties":{"code":{"allOf":[{"$ref":"#/components/schemas/Common.DefaultErrorCode"}],"description":"Uniquely identifies an error condition."},"message":{"type":"string","description":"Supporting description of the error","example":"Error has occurred."},"target":{"type":"string","description":"Indicates the invalid field"}}}}}},"404":{"description":"The server cannot find the requested resource.","content":{"application/json":{"schema":{"type":"object","required":["message"],"properties":{"code":{"allOf":[{"$ref":"#/components/schemas/Common.DefaultErrorCode"}],"description":"Uniquely identifies an error condition."},"message":{"type":"string","description":"Supporting description of the error","example":"Error has occurred."},"target":{"type":"string","description":"Indicates the invalid field"}}}}}}},"tags":["dbo"]}},"/v1/dbo/databases/{entityId}/plugins/operation/{operation}":{"post":{"operationId":"pluginOperation","summary":"Apply an operation on a database observability plugin","parameters":[{"$ref":"#/components/parameters/Common.EntityIdParam"},{"name":"operation","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"description":"There is no content to send for this request, but the headers may be useful."},"400":{"description":"The server could not understand the request due to invalid syntax.","content":{"application/json":{"schema":{"type":"object","required":["message"],"properties":{"code":{"allOf":[{"$ref":"#/components/schemas/Common.DefaultErrorCode"}],"description":"Uniquely identifies an error condition."},"message":{"type":"string","description":"Supporting description of the error","example":"Error has occurred."},"target":{"type":"string","description":"Indicates the invalid field"}}}}}},"404":{"description":"The server cannot find the requested resource.","content":{"application/json":{"schema":{"type":"object","required":["message"],"properties":{"code":{"allOf":[{"$ref":"#/components/schemas/Common.DefaultErrorCode"}],"description":"Uniquely identifies an error condition."},"message":{"type":"string","description":"Supporting description of the error","example":"Error has occurred."},"target":{"type":"string","description":"Indicates the invalid field"}}}}}}},"tags":["dbo"]}},"/v1/dem/probes":{"get":{"operationId":"listProbes","summary":"Get a list of existing synthetic probes","parameters":[],"responses":{"200":{"description":"The request has succeeded.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Dem.ListProbesResponse"}}}},"500":{"description":"Server error","content":{"application/json":{"schema":{"type":"object","required":["message"],"properties":{"code":{"allOf":[{"$ref":"#/components/schemas/Common.DefaultErrorCode"}],"description":"Uniquely identifies an error condition."},"message":{"type":"string","description":"Supporting description of the error","example":"Error has occurred."},"target":{"type":"string","description":"Indicates the invalid field"}}}}}}},"tags":["dem"]}},"/v1/dem/settings":{"get":{"operationId":"getDemSettings","summary":"Get DEM settings","parameters":[],"responses":{"200":{"description":"The request has succeeded.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Dem.OutageConfiguration"}}}}},"tags":["dem"]},"put":{"operationId":"setDemSettings","summary":"Set DEM settings","parameters":[],"responses":{"200":{"description":"The request has succeeded."}},"tags":["dem"],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Dem.OutageConfiguration"}}},"description":"Default conditions when an entity is considered down."}}},"/v1/dem/uris":{"post":{"operationId":"createUri","summary":"Create URI monitoring configuration","parameters":[],"responses":{"201":{"description":"The request has succeeded and a new resource has been created as a result.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Common.EntityId"}}}},"400":{"description":"The server could not understand the request due to invalid syntax.","content":{"application/json":{"schema":{"type":"object","required":["message"],"properties":{"code":{"allOf":[{"$ref":"#/components/schemas/Common.DefaultErrorCode"}],"description":"Uniquely identifies an error condition."},"message":{"type":"string","description":"Supporting description of the error","example":"Error has occurred."},"target":{"type":"string","description":"Indicates the invalid field"}}}}}}},"tags":["dem"],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Dem.Uri"}}},"description":"The created URI monitoring configuration"}}},"/v1/dem/uris/{entityId}":{"get":{"operationId":"getUri","summary":"Get URI monitoring configuration","parameters":[{"$ref":"#/components/parameters/Common.EntityIdParam"}],"responses":{"200":{"description":"The request has succeeded.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Dem.GetUriResponse"}}}},"404":{"description":"The server cannot find the requested resource.","content":{"application/json":{"schema":{"type":"object","required":["message"],"properties":{"code":{"allOf":[{"$ref":"#/components/schemas/Common.DefaultErrorCode"}],"description":"Uniquely identifies an error condition."},"message":{"type":"string","description":"Supporting description of the error","example":"Error has occurred."},"target":{"type":"string","description":"Indicates the invalid field"}}}}}}},"tags":["dem"]},"put":{"operationId":"updateUri","summary":"Update URI monitoring configuration","parameters":[{"$ref":"#/components/parameters/Common.EntityIdParam"}],"responses":{"200":{"description":"The request has succeeded.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Common.EntityId"}}}},"400":{"description":"The server could not understand the request due to invalid syntax.","content":{"application/json":{"schema":{"type":"object","required":["message"],"properties":{"code":{"allOf":[{"$ref":"#/components/schemas/Common.DefaultErrorCode"}],"description":"Uniquely identifies an error condition."},"message":{"type":"string","description":"Supporting description of the error","example":"Error has occurred."},"target":{"type":"string","description":"Indicates the invalid field"}}}}}},"404":{"description":"The server cannot find the requested resource.","content":{"application/json":{"schema":{"type":"object","required":["message"],"properties":{"code":{"allOf":[{"$ref":"#/components/schemas/Common.DefaultErrorCode"}],"description":"Uniquely identifies an error condition."},"message":{"type":"string","description":"Supporting description of the error","example":"Error has occurred."},"target":{"type":"string","description":"Indicates the invalid field"}}}}}}},"tags":["dem"],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Dem.Uri"}}},"description":"The updated URI monitoring configuration"}},"delete":{"operationId":"deleteUri","summary":"Delete URI","parameters":[{"$ref":"#/components/parameters/Common.EntityIdParam"}],"responses":{"200":{"description":"The request has succeeded.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Common.EntityId"}}}},"404":{"description":"The server cannot find the requested resource.","content":{"application/json":{"schema":{"type":"object","required":["message"],"properties":{"code":{"allOf":[{"$ref":"#/components/schemas/Common.DefaultErrorCode"}],"description":"Uniquely identifies an error condition."},"message":{"type":"string","description":"Supporting description of the error","example":"Error has occurred."},"target":{"type":"string","description":"Indicates the invalid field"}}}}}}},"tags":["dem"]}},"/v1/dem/uris/{entityId}/pauseMonitoring":{"put":{"operationId":"pauseUriMonitoring","summary":"Pause monitoring of the URI","parameters":[{"$ref":"#/components/parameters/Common.EntityIdParam"}],"responses":{"200":{"description":"The request has succeeded.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Common.EntityId"}}}},"404":{"description":"The server cannot find the requested resource.","content":{"application/json":{"schema":{"type":"object","required":["message"],"properties":{"code":{"allOf":[{"$ref":"#/components/schemas/Common.DefaultErrorCode"}],"description":"Uniquely identifies an error condition."},"message":{"type":"string","description":"Supporting description of the error","example":"Error has occurred."},"target":{"type":"string","description":"Indicates the invalid field"}}}}}}},"tags":["dem"]}},"/v1/dem/uris/{entityId}/unpauseMonitoring":{"put":{"operationId":"unpauseUriMonitoring","summary":"Unpause monitoring of the URI","parameters":[{"$ref":"#/components/parameters/Common.EntityIdParam"}],"responses":{"200":{"description":"The request has succeeded.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Common.EntityId"}}}},"404":{"description":"The server cannot find the requested resource.","content":{"application/json":{"schema":{"type":"object","required":["message"],"properties":{"code":{"allOf":[{"$ref":"#/components/schemas/Common.DefaultErrorCode"}],"description":"Uniquely identifies an error condition."},"message":{"type":"string","description":"Supporting description of the error","example":"Error has occurred."},"target":{"type":"string","description":"Indicates the invalid field"}}}}}}},"tags":["dem"]}},"/v1/dem/websites":{"post":{"operationId":"createWebsite","summary":"Create website monitoring configuration","parameters":[],"responses":{"201":{"description":"The request has succeeded and a new resource has been created as a result.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Common.EntityId"}}}},"400":{"description":"The server could not understand the request due to invalid syntax.","content":{"application/json":{"schema":{"type":"object","required":["message"],"properties":{"code":{"allOf":[{"$ref":"#/components/schemas/Common.DefaultErrorCode"}],"description":"Uniquely identifies an error condition."},"message":{"type":"string","description":"Supporting description of the error","example":"Error has occurred."},"target":{"type":"string","description":"Indicates the invalid field"}}}}}}},"tags":["dem"],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Dem.Website"}}},"description":"The created website monitoring configuration"}}},"/v1/dem/websites/{entityId}":{"get":{"operationId":"getWebsite","summary":"Get website monitoring configuration","parameters":[{"$ref":"#/components/parameters/Common.EntityIdParam"}],"responses":{"200":{"description":"The request has succeeded.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Dem.GetWebsiteResponse"}}}},"404":{"description":"The server cannot find the requested resource.","content":{"application/json":{"schema":{"type":"object","required":["message"],"properties":{"code":{"allOf":[{"$ref":"#/components/schemas/Common.DefaultErrorCode"}],"description":"Uniquely identifies an error condition."},"message":{"type":"string","description":"Supporting description of the error","example":"Error has occurred."},"target":{"type":"string","description":"Indicates the invalid field"}}}}}}},"tags":["dem"]},"put":{"operationId":"updateWebsite","summary":"Update website monitoring configuration","parameters":[{"$ref":"#/components/parameters/Common.EntityIdParam"}],"responses":{"200":{"description":"The request has succeeded.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Common.EntityId"}}}},"400":{"description":"The server could not understand the request due to invalid syntax.","content":{"application/json":{"schema":{"type":"object","required":["message"],"properties":{"code":{"allOf":[{"$ref":"#/components/schemas/Common.DefaultErrorCode"}],"description":"Uniquely identifies an error condition."},"message":{"type":"string","description":"Supporting description of the error","example":"Error has occurred."},"target":{"type":"string","description":"Indicates the invalid field"}}}}}},"404":{"description":"The server cannot find the requested resource.","content":{"application/json":{"schema":{"type":"object","required":["message"],"properties":{"code":{"allOf":[{"$ref":"#/components/schemas/Common.DefaultErrorCode"}],"description":"Uniquely identifies an error condition."},"message":{"type":"string","description":"Supporting description of the error","example":"Error has occurred."},"target":{"type":"string","description":"Indicates the invalid field"}}}}}}},"tags":["dem"],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Dem.Website"}}},"description":"The updated website monitoring configuration"}},"delete":{"operationId":"deleteWebsite","summary":"Delete website","parameters":[{"$ref":"#/components/parameters/Common.EntityIdParam"}],"responses":{"200":{"description":"The request has succeeded.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Common.EntityId"}}}},"404":{"description":"The server cannot find the requested resource.","content":{"application/json":{"schema":{"type":"object","required":["message"],"properties":{"code":{"allOf":[{"$ref":"#/components/schemas/Common.DefaultErrorCode"}],"description":"Uniquely identifies an error condition."},"message":{"type":"string","description":"Supporting description of the error","example":"Error has occurred."},"target":{"type":"string","description":"Indicates the invalid field"}}}}}}},"tags":["dem"]}},"/v1/dem/websites/{entityId}/pauseMonitoring":{"put":{"operationId":"pauseWebsiteMonitoring","summary":"Pause monitoring of a website","parameters":[{"$ref":"#/components/parameters/Common.EntityIdParam"}],"responses":{"200":{"description":"The request has succeeded.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Common.EntityId"}}}},"404":{"description":"The server cannot find the requested resource.","content":{"application/json":{"schema":{"type":"object","required":["message"],"properties":{"code":{"allOf":[{"$ref":"#/components/schemas/Common.DefaultErrorCode"}],"description":"Uniquely identifies an error condition."},"message":{"type":"string","description":"Supporting description of the error","example":"Error has occurred."},"target":{"type":"string","description":"Indicates the invalid field"}}}}}}},"tags":["dem"]}},"/v1/dem/websites/{entityId}/unpauseMonitoring":{"put":{"operationId":"unpauseWebsiteMonitoring","summary":"Unpause monitoring of a website","parameters":[{"$ref":"#/components/parameters/Common.EntityIdParam"}],"responses":{"200":{"description":"The request has succeeded.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Common.EntityId"}}}},"404":{"description":"The server cannot find the requested resource.","content":{"application/json":{"schema":{"type":"object","required":["message"],"properties":{"code":{"allOf":[{"$ref":"#/components/schemas/Common.DefaultErrorCode"}],"description":"Uniquely identifies an error condition."},"message":{"type":"string","description":"Supporting description of the error","example":"Error has occurred."},"target":{"type":"string","description":"Indicates the invalid field"}}}}}}},"tags":["dem"]}},"/v1/entities":{"get":{"operationId":"listEntities","summary":"Get a list of entities by type. A returned empty list indicates no entities matched the given parameters.","parameters":[{"name":"type","in":"query","required":true,"description":"The entity type to search for","schema":{"type":"string"},"explode":false},{"name":"name","in":"query","required":false,"description":"The entity name to search for","schema":{"type":"string"},"explode":false},{"$ref":"#/components/parameters/Common.PageParams.pageSize"},{"$ref":"#/components/parameters/Common.PageParams.skipToken"}],"responses":{"200":{"description":"The request has succeeded.","content":{"application/json":{"schema":{"type":"object","properties":{"entities":{"type":"array","items":{"$ref":"#/components/schemas/Entities.Entity"}},"pageInfo":{"$ref":"#/components/schemas/Common.PageInfo"}},"required":["entities","pageInfo"]}}}},"400":{"description":"The server could not understand the request due to invalid syntax.","content":{"application/json":{"schema":{"type":"object","required":["message"],"properties":{"code":{"allOf":[{"$ref":"#/components/schemas/Common.DefaultErrorCode"}],"description":"Uniquely identifies an error condition."},"message":{"type":"string","description":"Supporting description of the error","example":"Error has occurred."},"target":{"type":"string","description":"Indicates the invalid field"}}}}}},"401":{"description":"Access is unauthorized.","content":{"application/json":{"schema":{"type":"object","required":["message"],"properties":{"code":{"allOf":[{"$ref":"#/components/schemas/Common.DefaultErrorCode"}],"description":"Uniquely identifies an error condition."},"message":{"type":"string","description":"Supporting description of the error","example":"Error has occurred."},"target":{"type":"string","description":"Indicates the invalid field"}}}}}}},"tags":["entities"],"x-speakeasy-pagination":{"type":"url","outputs":{"nextUrl":"$.pageInfo.nextPage"}}}},"/v1/entities/{id}":{"get":{"operationId":"getEntityById","summary":"Get an entity by ID","parameters":[{"name":"id","in":"path","required":true,"description":"The entity's ID","schema":{"type":"string"}}],"responses":{"200":{"description":"The request has succeeded.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Entities.Entity"}}}},"400":{"description":"The server could not understand the request due to invalid syntax.","content":{"application/json":{"schema":{"type":"object","required":["message"],"properties":{"code":{"allOf":[{"$ref":"#/components/schemas/Common.DefaultErrorCode"}],"description":"Uniquely identifies an error condition."},"message":{"type":"string","description":"Supporting description of the error","example":"Error has occurred."},"target":{"type":"string","description":"Indicates the invalid field"}}}}}},"401":{"description":"Access is unauthorized.","content":{"application/json":{"schema":{"type":"object","required":["message"],"properties":{"code":{"allOf":[{"$ref":"#/components/schemas/Common.DefaultErrorCode"}],"description":"Uniquely identifies an error condition."},"message":{"type":"string","description":"Supporting description of the error","example":"Error has occurred."},"target":{"type":"string","description":"Indicates the invalid field"}}}}}},"404":{"description":"The server cannot find the requested resource.","content":{"application/json":{"schema":{"type":"object","required":["message"],"properties":{"code":{"allOf":[{"$ref":"#/components/schemas/Common.DefaultErrorCode"}],"description":"Uniquely identifies an error condition."},"message":{"type":"string","description":"Supporting description of the error","example":"Error has occurred."},"target":{"type":"string","description":"Indicates the invalid field"}}}}}}},"tags":["entities"]},"put":{"operationId":"updateEntityById","summary":"Update an entity by ID","parameters":[{"name":"id","in":"path","required":true,"description":"The entity's ID","schema":{"type":"string"}}],"responses":{"202":{"description":"The request has been accepted for processing, but processing has not yet completed."},"400":{"description":"The server could not understand the request due to invalid syntax.","content":{"application/json":{"schema":{"type":"object","required":["message"],"properties":{"code":{"allOf":[{"$ref":"#/components/schemas/Common.DefaultErrorCode"}],"description":"Uniquely identifies an error condition."},"message":{"type":"string","description":"Supporting description of the error","example":"Error has occurred."},"target":{"type":"string","description":"Indicates the invalid field"}}}}}},"401":{"description":"Access is unauthorized.","content":{"application/json":{"schema":{"type":"object","required":["message"],"properties":{"code":{"allOf":[{"$ref":"#/components/schemas/Common.DefaultErrorCode"}],"description":"Uniquely identifies an error condition."},"message":{"type":"string","description":"Supporting description of the error","example":"Error has occurred."},"target":{"type":"string","description":"Indicates the invalid field"}}}}}},"404":{"description":"The server cannot find the requested resource.","content":{"application/json":{"schema":{"type":"object","required":["message"],"properties":{"code":{"allOf":[{"$ref":"#/components/schemas/Common.DefaultErrorCode"}],"description":"Uniquely identifies an error condition."},"message":{"type":"string","description":"Supporting description of the error","example":"Error has occurred."},"target":{"type":"string","description":"Indicates the invalid field"}}}}}}},"tags":["entities"],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Entities.Entity"}}},"description":"Entity properties to update. The entire representation of the entity as to be stored must be provided in the request."}}},"/v1/logs":{"get":{"operationId":"searchLogs","summary":"Search logs","description":"Search logs within a time period","parameters":[{"name":"filter","in":"query","required":false,"description":"A search query string","schema":{"type":"string"},"explode":false},{"name":"group","in":"query","required":false,"description":"Filter logs by a specific group name","schema":{"type":"string"},"explode":false},{"name":"entityId","in":"query","required":false,"description":"Filter logs by a specific entity id","schema":{"type":"string"},"explode":false},{"$ref":"#/components/parameters/Common.TimeRangeParams.startTime"},{"$ref":"#/components/parameters/Common.TimeRangeParams.endTime"},{"name":"direction","in":"query","required":false,"description":"Search direction: backward, forward, or tail. Backward sorts logs from oldest to newest, forward sorts logs from newest to oldest, and tail sorts from oldest to newest.","schema":{"type":"string","default":"backward"},"explode":false},{"$ref":"#/components/parameters/Common.PageParams.pageSize"},{"$ref":"#/components/parameters/Common.PageParams.skipToken"}],"responses":{"200":{"description":"The request has succeeded.","content":{"application/json":{"schema":{"type":"object","properties":{"logs":{"type":"array","items":{"$ref":"#/components/schemas/Logs.Event"}},"pageInfo":{"$ref":"#/components/schemas/Common.PageInfo"}},"required":["logs","pageInfo"]}}}}},"tags":["logs"],"x-speakeasy-pagination":{"type":"url","outputs":{"nextUrl":"$.pageInfo.nextPage"}}}},"/v1/logs/archives":{"get":{"operationId":"listLogArchives","summary":"Retrieve location and metadata of log archives","description":"Retrieves a list of log archives within a time period.","parameters":[{"$ref":"#/components/parameters/Logs.TimeRangeParams.startTime"},{"$ref":"#/components/parameters/Logs.TimeRangeParams.endTime"},{"$ref":"#/components/parameters/Common.PageParams.pageSize"},{"$ref":"#/components/parameters/Common.PageParams.skipToken"}],"responses":{"200":{"description":"The request has succeeded.","content":{"application/json":{"schema":{"type":"object","properties":{"logArchives":{"type":"array","items":{"$ref":"#/components/schemas/Logs.Archive"}},"pageInfo":{"$ref":"#/components/schemas/Common.PageInfo"}},"required":["logArchives","pageInfo"]}}}}},"tags":["logs"],"x-speakeasy-pagination":{"type":"url","outputs":{"nextUrl":"$.pageInfo.nextPage"}}}},"/v1/metadata/entities/types":{"get":{"operationId":"listEntityTypes","summary":"List all entity types","description":"List all available entity types.","parameters":[],"responses":{"200":{"description":"List of entity types","content":{"application/json":{"schema":{"type":"object","properties":{"types":{"type":"array","items":{"type":"string"},"example":["Service","ServiceInstance","KubernetesCluster"]}},"required":["types"]}}}}},"tags":["metadata"]}},"/v1/metadata/entities/types/{type}/metrics":{"get":{"operationId":"listMetricsForEntityType","summary":"List metrics metadata for an entity type","description":"List metrics metadata for an entity type between a start and end time. If start time and end time unspecified, a default time range is be applied. An empty list indicates no metrics matched the given parameters.","parameters":[{"name":"type","in":"path","required":true,"schema":{"type":"string"}},{"$ref":"#/components/parameters/Common.TimeRangeParams.startTime"},{"$ref":"#/components/parameters/Common.TimeRangeParams.endTime"}],"responses":{"200":{"description":"The request has succeeded.","content":{"application/json":{"schema":{"type":"object","properties":{"type":{"type":"string","example":"KubernetesCluster"},"metrics":{"type":"array","items":{"$ref":"#/components/schemas/Common.MetricInfo"},"description":"A list of metrics and their metadata. An empty list indicates no metrics matched the given parameters.","example":[{"name":"composite.k8s.pod.container.status.restarts.increase","units":"count","formula":"increase(k8s.kube_pod_container_status_restarts_total[5m])","lastReportedTime":"2021-01-01T00:00:00Z"}]}},"required":["type","metrics"]}}}},"404":{"description":"The server cannot find the requested resource.","content":{"application/json":{"schema":{"type":"object","required":["message"],"properties":{"code":{"allOf":[{"$ref":"#/components/schemas/Common.DefaultErrorCode"}],"description":"Uniquely identifies an error condition."},"message":{"type":"string","description":"Supporting description of the error","example":"Error has occurred."},"target":{"type":"string","description":"Indicates the invalid field"}}}}}}},"tags":["metadata"]}},"/v1/metrics":{"get":{"operationId":"listMetrics","summary":"List metrics","description":"List metrics available within a time period.","parameters":[{"name":"name","in":"query","required":false,"description":"metric name","schema":{"type":"string"},"explode":false},{"$ref":"#/components/parameters/Common.TimeRangeParams.startTime"},{"$ref":"#/components/parameters/Common.TimeRangeParams.endTime"},{"$ref":"#/components/parameters/Common.PageParams.pageSize"},{"$ref":"#/components/parameters/Common.PageParams.skipToken"}],"responses":{"200":{"description":"The request has succeeded.","content":{"application/json":{"schema":{"type":"object","properties":{"metricsInfo":{"type":"array","items":{"$ref":"#/components/schemas/Common.MetricInfo"}},"pageInfo":{"$ref":"#/components/schemas/Common.PageInfo"}},"required":["metricsInfo","pageInfo"]}}}}},"tags":["metrics"],"x-speakeasy-pagination":{"type":"url","outputs":{"nextUrl":"$.pageInfo.nextPage"}}},"post":{"operationId":"createCompositeMetric","summary":"Create composite metric","description":"Create a composite metric given a PromQL query.","parameters":[],"responses":{"201":{"description":"The request has succeeded and a new resource has been created as a result.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Metrics.CompositeMetric"}}}},"400":{"description":"The server could not understand the request due to invalid syntax.","content":{"application/json":{"schema":{"type":"object","required":["message"],"properties":{"code":{"allOf":[{"$ref":"#/components/schemas/Common.DefaultErrorCode"}],"description":"Uniquely identifies an error condition."},"message":{"type":"string","description":"Supporting description of the error","example":"Error has occurred."},"target":{"type":"string","description":"Indicates the invalid field"}}}}}},"409":{"description":"The request conflicts with the current state of the server.","content":{"application/json":{"schema":{"type":"object","required":["message"],"properties":{"code":{"allOf":[{"$ref":"#/components/schemas/Metrics.MetricErrorCode"}],"description":"Uniquely identifies an error condition."},"message":{"type":"string","description":"Supporting description of the error","example":"Error has occurred."},"target":{"type":"string","description":"Indicates the invalid field"}}}}}}},"tags":["metrics"],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Metrics.CompositeMetric"}}}}}},"/v1/metrics/measurements":{"post":{"operationId":"listMultiMetricMeasurements","summary":"List measurements for a batch of metrics","description":"  List metric measurements, potentially filtered and aggregated. This operation mimics the\n  capabilities found in GET `/v1/metrics/{name}/measurements`, extending it for an entire batch of\n  metrics that can be requested at once, over the same time interval.\n\n  It is legal to request the same metric multiple times, using different aggregations. For\n  example, both the total for the interval (scalar) and a time series can be read simultaneously,\n  using two different entries in the request payload. Entries in the response can be matched with\n  the respective requests by metric name. When more than one exist for the same name, an `id`\n  can be provided to disambiguate. This property will be echoed back unchanged and can be used\n  for some or all entries, regardless of whether metrics repeat.\n\n  By default, this endpoint will omit response entries that include no measurements. This is done\n  only when the request contains enough information for the client to successfully match all\n  responses back to their respective requests—i.e., when there is at most one entry for each\n  combination of metric name and `id`. This provides a cleaner response, especially in case where\n  multiple pages need to be traversed and data for most metric entries is exhausted early.\n  Otherwise, empty entries will be included as well and the output will be fully positional. This\n  positional mode can be forced with `forcePositional`.\n\n  Pages can be navigated by following the links returned in `pageInfo`. Those requests must also\n  be POST and must include the same payload that was initially sent. Behavior is undefined\n  otherwise.","parameters":[{"name":"forcePositional","in":"query","required":false,"description":"Forces a positional response; see the operation description.","schema":{"type":"boolean","default":false},"explode":false},{"$ref":"#/components/parameters/Common.PageParams.pageSize"},{"$ref":"#/components/parameters/Common.PageParams.skipToken"}],"responses":{"200":{"description":"The request has succeeded.","content":{"application/json":{"schema":{"type":"object","properties":{"metrics":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","description":"Entry identification, as (if) provided in the corresponding request entry.","example":"throughput-series"},"name":{"type":"string","description":"Metric name.","example":"dbo.host.queries.tput"},"groupings":{"type":"array","items":{"$ref":"#/components/schemas/Metrics.Grouping"},"description":"Collection of attributes and measurements."},"bucketSizeInSeconds":{"type":"integer","format":"int32","description":"Bucket size used for computing points in this entry.","example":1}},"required":["name","groupings","bucketSizeInSeconds"]}},"pageInfo":{"$ref":"#/components/schemas/Common.PageInfo"}},"required":["metrics","pageInfo"]}}}},"400":{"description":"The server could not understand the request due to invalid syntax.","content":{"application/json":{"schema":{"type":"object","required":["message"],"properties":{"code":{"allOf":[{"$ref":"#/components/schemas/Common.DefaultErrorCode"}],"description":"Uniquely identifies an error condition."},"message":{"type":"string","description":"Supporting description of the error","example":"Error has occurred."},"target":{"type":"string","description":"Indicates the invalid field"}}}}}}},"tags":["metrics"],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"metrics":{"type":"array","items":{"$ref":"#/components/schemas/Metrics.MeasurementsRequest"}},"startTime":{"type":"string","format":"date-time","description":"Timestamp in ISO 8601 format in UTC timezone: yyyy-MM-ddTHH:mm:ssZ"},"endTime":{"type":"string","format":"date-time","description":"Timestamp in ISO 8601 format in UTC timezone: yyyy-MM-ddTHH:mm:ssZ"}},"required":["metrics"]}}}},"x-speakeasy-pagination":{"type":"url","outputs":{"nextUrl":"$.pageInfo.nextPage"}}}},"/v1/metrics/{name}":{"put":{"operationId":"updateCompositeMetric","summary":"Update composite metric","description":"Update a composite metric given a metric name.","parameters":[{"name":"name","in":"path","required":true,"description":"The metric name","schema":{"type":"string"}}],"responses":{"200":{"description":"The request has succeeded.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Metrics.CompositeMetric"}}}},"202":{"description":"The request has been accepted for processing, but processing has not yet completed."},"400":{"description":"The server could not understand the request due to invalid syntax.","content":{"application/json":{"schema":{"type":"object","required":["message"],"properties":{"code":{"allOf":[{"$ref":"#/components/schemas/Common.DefaultErrorCode"}],"description":"Uniquely identifies an error condition."},"message":{"type":"string","description":"Supporting description of the error","example":"Error has occurred."},"target":{"type":"string","description":"Indicates the invalid field"}}}}}},"403":{"description":"Access is forbidden.","content":{"application/json":{"schema":{"type":"object","required":["message"],"properties":{"code":{"allOf":[{"$ref":"#/components/schemas/Metrics.MetricErrorCode"}],"description":"Uniquely identifies an error condition."},"message":{"type":"string","description":"Supporting description of the error","example":"Error has occurred."},"target":{"type":"string","description":"Indicates the invalid field"}}}}}},"404":{"description":"The server cannot find the requested resource.","content":{"application/json":{"schema":{"type":"object","required":["message"],"properties":{"code":{"allOf":[{"$ref":"#/components/schemas/Common.DefaultErrorCode"}],"description":"Uniquely identifies an error condition."},"message":{"type":"string","description":"Supporting description of the error","example":"Error has occurred."},"target":{"type":"string","description":"Indicates the invalid field"}}}}}}},"tags":["metrics"],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Metrics.UpdateCompositeMetricRequest"}}},"description":"Metric properties to update"}},"delete":{"operationId":"deleteCompositeMetric","summary":"Delete composite metric","description":"Delete a composite metric given a metric name.","parameters":[{"name":"name","in":"path","required":true,"description":"The metric name","schema":{"type":"string"}}],"responses":{"204":{"description":"There is no content to send for this request, but the headers may be useful. "},"403":{"description":"Access is forbidden.","content":{"application/json":{"schema":{"type":"object","required":["message"],"properties":{"code":{"allOf":[{"$ref":"#/components/schemas/Metrics.MetricErrorCode"}],"description":"Uniquely identifies an error condition."},"message":{"type":"string","description":"Supporting description of the error","example":"Error has occurred."},"target":{"type":"string","description":"Indicates the invalid field"}}}}}},"404":{"description":"The server cannot find the requested resource.","content":{"application/json":{"schema":{"type":"object","required":["message"],"properties":{"code":{"allOf":[{"$ref":"#/components/schemas/Common.DefaultErrorCode"}],"description":"Uniquely identifies an error condition."},"message":{"type":"string","description":"Supporting description of the error","example":"Error has occurred."},"target":{"type":"string","description":"Indicates the invalid field"}}}}}}},"tags":["metrics"]},"get":{"operationId":"getMetricByName","summary":"Get metric info by name","description":"Get information about a given metric.","parameters":[{"name":"name","in":"path","required":true,"description":"metric name","schema":{"type":"string"}}],"responses":{"200":{"description":"The request has succeeded.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Common.MetricInfo"}}}},"404":{"description":"The server cannot find the requested resource.","content":{"application/json":{"schema":{"type":"object","required":["message"],"properties":{"code":{"allOf":[{"$ref":"#/components/schemas/Common.DefaultErrorCode"}],"description":"Uniquely identifies an error condition."},"message":{"type":"string","description":"Supporting description of the error","example":"Error has occurred."},"target":{"type":"string","description":"Indicates the invalid field"}}}}}}},"tags":["metrics"],"x-speakeasy-pagination":{"type":"url","outputs":{"nextUrl":"$.pageInfo.nextPage"}}}},"/v1/metrics/{name}/attributes":{"get":{"operationId":"listMetricAttributes","summary":"List metric attribute names","description":"List attribute names for a given metric.","parameters":[{"name":"name","in":"path","required":true,"description":"metric name","schema":{"type":"string"}},{"$ref":"#/components/parameters/Common.TimeRangeParams.startTime"},{"$ref":"#/components/parameters/Common.TimeRangeParams.endTime"},{"$ref":"#/components/parameters/Common.PageParams.pageSize"},{"$ref":"#/components/parameters/Common.PageParams.skipToken"}],"responses":{"200":{"description":"The request has succeeded.","content":{"application/json":{"schema":{"type":"object","properties":{"names":{"type":"array","items":{"type":"string"}},"pageInfo":{"$ref":"#/components/schemas/Common.PageInfo"}},"required":["names","pageInfo"]}}}},"404":{"description":"The server cannot find the requested resource.","content":{"application/json":{"schema":{"type":"object","required":["message"],"properties":{"code":{"allOf":[{"$ref":"#/components/schemas/Common.DefaultErrorCode"}],"description":"Uniquely identifies an error condition."},"message":{"type":"string","description":"Supporting description of the error","example":"Error has occurred."},"target":{"type":"string","description":"Indicates the invalid field"}}}}}}},"tags":["metrics"],"x-speakeasy-pagination":{"type":"url","outputs":{"nextUrl":"$.pageInfo.nextPage"}}}},"/v1/metrics/{name}/attributes/{attributeName}":{"get":{"operationId":"listMetricAttributeValues","summary":"List metric attribute values","description":"List the values of a given metric's attribute.","parameters":[{"name":"name","in":"path","required":true,"description":"metric name","schema":{"type":"string"}},{"name":"attributeName","in":"path","required":true,"description":"attribute name","schema":{"type":"string"}},{"$ref":"#/components/parameters/Common.TimeRangeParams.startTime"},{"$ref":"#/components/parameters/Common.TimeRangeParams.endTime"},{"$ref":"#/components/parameters/Common.PageParams.pageSize"},{"$ref":"#/components/parameters/Common.PageParams.skipToken"}],"responses":{"200":{"description":"The request has succeeded.","content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string"},"values":{"type":"array","items":{"type":"string"}},"pageInfo":{"$ref":"#/components/schemas/Common.PageInfo"}},"required":["name","values","pageInfo"]}}}},"404":{"description":"The server cannot find the requested resource.","content":{"application/json":{"schema":{"type":"object","required":["message"],"properties":{"code":{"allOf":[{"$ref":"#/components/schemas/Common.DefaultErrorCode"}],"description":"Uniquely identifies an error condition."},"message":{"type":"string","description":"Supporting description of the error","example":"Error has occurred."},"target":{"type":"string","description":"Indicates the invalid field"}}}}}}},"tags":["metrics"],"x-speakeasy-pagination":{"type":"url","outputs":{"nextUrl":"$.pageInfo.nextPage"}}}},"/v1/metrics/{name}/measurements":{"get":{"operationId":"listMetricMeasurements","summary":"List metric measurement values, grouped by attributes, filtered by the filter. An empty list indicates no data points are available for the given parameters.","parameters":[{"name":"name","in":"path","required":true,"description":"metric name","schema":{"type":"string"}},{"name":"filter","in":"query","required":false,"description":"Query to filter the measurement values. e.g id: [id1,id2] category: moderate","schema":{"type":"string"},"explode":false},{"name":"groupBy","in":"query","required":false,"description":"Comma-delimited list of attribute names to group measurements by. e.g id, category","schema":{"type":"string"},"explode":false},{"name":"aggregateBy","in":"query","required":false,"description":"Aggregation method used to group measurements.","schema":{"$ref":"#/components/schemas/Metrics.AggregationMethods","default":"AVG"},"explode":false},{"name":"bucketSizeInSeconds","in":"query","required":false,"description":"This parameter is deprecated. Bucket size is determined by the API layer.","schema":{"type":"integer","format":"int32"},"explode":false,"deprecated":true},{"name":"preGroupBy","in":"query","required":false,"description":"Secondary grouping to allow aggregating data points inside individual buckets. Has to be set together with `preGroupByMethod`.","schema":{"type":"string"},"explode":false},{"name":"preGroupByMethod","in":"query","required":false,"description":"Secondary aggregation to allow aggregating data points inside individual buckets. Has to be set together with `preGroupBy`.","schema":{"type":"string"},"explode":false},{"name":"seriesType","in":"query","required":true,"description":"Indicates what type of data to return.","schema":{"$ref":"#/components/schemas/Metrics.MetricSeriesType","default":"TIMESERIES"},"explode":false},{"$ref":"#/components/parameters/Common.TimeRangeParams.startTime"},{"$ref":"#/components/parameters/Common.TimeRangeParams.endTime"},{"$ref":"#/components/parameters/Common.PageParams.pageSize"},{"$ref":"#/components/parameters/Common.PageParams.skipToken"}],"responses":{"200":{"description":"The request has succeeded.","content":{"application/json":{"schema":{"type":"object","properties":{"groupings":{"type":"array","items":{"$ref":"#/components/schemas/Metrics.Grouping"}},"bucketSizeInSeconds":{"type":"integer","format":"int32"},"pageInfo":{"$ref":"#/components/schemas/Common.PageInfo"}},"required":["groupings","bucketSizeInSeconds","pageInfo"]}}}},"404":{"description":"The server cannot find the requested resource.","content":{"application/json":{"schema":{"type":"object","required":["message"],"properties":{"code":{"allOf":[{"$ref":"#/components/schemas/Common.DefaultErrorCode"}],"description":"Uniquely identifies an error condition."},"message":{"type":"string","description":"Supporting description of the error","example":"Error has occurred."},"target":{"type":"string","description":"Indicates the invalid field"}}}}}}},"tags":["metrics"],"x-speakeasy-pagination":{"type":"url","outputs":{"nextUrl":"$.pageInfo.nextPage"}}}},"/v1/tokens":{"post":{"operationId":"createToken","summary":"Create ingestion token","parameters":[],"responses":{"200":{"description":"The request has succeeded.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Tokens.CreateTokenResponse"}}}},"401":{"description":"Access is unauthorized."},"403":{"description":"Access is forbidden."},"500":{"description":"Server error"},"503":{"description":"Service unavailable."}},"tags":["tokens"],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Tokens.CreateTokenRequest"}}},"description":"Requested token's properties"}}}},"security":[{"BearerAuth":[]}],"components":{"parameters":{"Common.EntityIdParam":{"name":"entityId","in":"path","required":true,"schema":{"type":"string"}},"Common.PageParams.pageSize":{"name":"pageSize","in":"query","required":false,"description":"Number of items in a response page. Default varies by API.","schema":{"type":"integer","format":"int32"},"explode":false},"Common.PageParams.skipToken":{"name":"skipToken","in":"query","required":false,"description":"Token for the requested page.","schema":{"type":"string"},"explode":false},"Common.TimeRangeParams.endTime":{"name":"endTime","in":"query","required":false,"description":"Timestamp in ISO 8601 format in UTC timezone: yyyy-MM-ddTHH:mm:ssZ","schema":{"type":"string","format":"date-time"},"explode":false},"Common.TimeRangeParams.startTime":{"name":"startTime","in":"query","required":false,"description":"Timestamp in ISO 8601 format in UTC timezone: yyyy-MM-ddTHH:mm:ssZ","schema":{"type":"string","format":"date-time"},"explode":false},"Logs.TimeRangeParams.endTime":{"name":"endTime","in":"query","required":true,"description":"List archives ending at this time. Timestamp in ISO 8601 format in UTC timezone: yyyy-MM-ddTHH:mm:ssZ. Must be within the the last year.","schema":{"type":"string"},"explode":false},"Logs.TimeRangeParams.startTime":{"name":"startTime","in":"query","required":true,"description":"List archives beginning at this time. Timestamp in ISO 8601 format in UTC timezone: yyyy-MM-ddTHH:mm:ssZ. Must be within the the last year.","schema":{"type":"string"},"explode":false}},"schemas":{"ChangeEvents.ChangeEvent":{"type":"object","required":["name","title"],"properties":{"id":{"type":"integer","format":"int64","description":"Optional ID of the event. It is recommended to leave this empty when creating a new event so that a unique ID will be generated","example":1731676626},"name":{"type":"string","maxLength":100,"description":"The name of the event. Can be used as a category or type of event. Does not need to be unique.","example":"app-deploys"},"title":{"type":"string","maxLength":250,"description":"A short, high-level summary of the event.","example":"deployed v45"},"timestamp":{"type":"integer","format":"int64","description":"Timestamp of the event in seconds since the epoch. Defaults to the current time.","example":1731676626},"source":{"type":"string","description":"Description of the event's origination. For example, a hostname, user, or application name.","example":"foo3.example.com"},"description":{"type":"string","description":"Extra metadata about the event describing the specifics of the event."},"parentEventId":{"type":"integer","format":"int64","description":"The id of the parent event"},"tags":{"type":"object","additionalProperties":{"type":"string"},"description":"A set of key-value pairs that describe the event","example":{"app":"foo","environment":"production"}},"links":{"type":"array","items":{"$ref":"#/components/schemas/Common.Link"},"description":"A set of links to related resources","example":[{"href":"https://example.com","rel":"self"}]}}},"CloudAccounts.AwsActivateIntegrationRequest":{"type":"object","required":["managementAccountId","accountId","enable"],"properties":{"managementAccountId":{"type":"string","description":"AWS Control Tower Management Account ID."},"accountId":{"type":"string","description":"AWS Accounts ID to be integrated."},"enable":{"type":"boolean","description":"True to enable the integration, false to disable."}}},"CloudAccounts.AwsMgmtAccountOnboardingRequest":{"type":"object","required":["managementAccountId"],"properties":{"managementAccountId":{"type":"string","description":"AWS Control Tower Management Account ID."}}},"CloudAccounts.AwsMgmtAccountOnboardingResponse":{"type":"object","required":["isOnboarded"],"properties":{"isOnboarded":{"type":"boolean","description":"True if the Management Account is onboarded, false otherwise."}}},"CloudAccounts.AwsOrganisationalUnit":{"type":"object","required":["child_id","child_name"],"properties":{"child_id":{"type":"string","description":"AWS Account ID/Org unit ID."},"child_name":{"type":"string","description":"AWS Account Name/Org unit Name."},"parent_id":{"type":"string","description":"Parent Org unit ID."}}},"CloudAccounts.AwsOrganisationalUnitRequest":{"type":"object","required":["mgmtAccountId","structure"],"properties":{"mgmtAccountId":{"type":"string","description":"AWS Control Tower Management Account ID."},"structure":{"type":"array","items":{"$ref":"#/components/schemas/CloudAccounts.AwsOrganisationalUnit"},"description":"Organisational Structure of the AWS Account."}}},"CloudAccounts.AwsUpdateIntegrationRequest":{"type":"object","required":["managementAccountId","accountId","accountName","roleArn"],"properties":{"managementAccountId":{"type":"string","description":"AWS Control Tower Management Account ID."},"accountId":{"type":"string","description":"AWS Accounts ID to be integrated."},"accountName":{"type":"string","description":"Name of the AWS Account."},"roleArn":{"type":"string","description":"Role ARN to be assumed by the AWS Account."},"orgUnitId":{"type":"string","description":"AWS Account ID."},"orgUnitName":{"type":"string","description":"AWS Organizational Unit Name."},"parentOrgUnitId":{"type":"string","description":"Immediate Parent Organization Unit ID of the AWS Account to be integrated."}}},"CloudAccounts.AwsUpdateIntegrationResponse":{"type":"object","required":["selectedRegions","externalId","integrationId","integrationType","isNewAccount"],"properties":{"selectedRegions":{"type":"array","items":{"type":"string"},"description":"String array of AWS Regions in which the AWS Account is integrated."},"externalId":{"type":"string","description":"New External ID generated that is to be integrated as part of AWS Account's trust relationship."},"integrationId":{"type":"string","description":"Integration ID generated by SolarWinds Observability that is unique for each Account integrated."},"integrationType":{"type":"string","enum":["STREAMING","POLLING"],"description":"Integration Type would either be STREAMING or POLLING"},"isNewAccount":{"type":"boolean","description":"Flag to indicate if the AWS Account is newly integrated to SolarWinds Observability under the Control Tower Management Account Integration."}}},"Common.DefaultErrorCode":{"type":"string","enum":["AccessForbidden","InternalError","InvalidRequest","ResourceNotFound","ServiceUnavailable","Unauthorized"]},"Common.EntityId":{"type":"object","required":["id"],"properties":{"id":{"type":"string","example":"e-1448474379026206720"}},"allOf":[{"type":"object","required":["id"],"properties":{"id":{"type":"string","readOnly":true}}}]},"Common.KeyValuePair":{"type":"object","required":["key","value"],"properties":{"key":{"type":"string"},"value":{"type":"string"}}},"Common.Link":{"type":"object","required":["rel","href"],"properties":{"rel":{"type":"string"},"href":{"type":"string"},"label":{"type":"string"}}},"Common.MetricInfo":{"type":"object","required":["name"],"properties":{"name":{"type":"string","description":"Name of the metric.","example":"composite.custom.system.disk.io.rate"},"displayName":{"type":"string","nullable":true,"description":"Display name of the metric. A short description of the metric.","example":"Disk IO rate"},"description":{"type":"string","nullable":true,"description":"Description of the metric. A detailed description of the metric.","example":"Disk bytes transferred per second"},"units":{"type":"string","nullable":true,"description":"Unit of the metric.","example":"bytes/s"},"formula":{"type":"string","nullable":true,"description":"Formula of the metric.","example":"rate(system.disk.io[5m]"},"lastReportedTime":{"type":"string","nullable":true,"format":"date-time","description":"Last reported time of the metric.","example":"2024-11-25T16:38:24Z"}}},"Common.PageInfo":{"type":"object","required":["prevPage","nextPage"],"properties":{"prevPage":{"type":"string"},"nextPage":{"type":"string"}}},"Common.Tag":{"type":"object","required":["key","value"],"properties":{"key":{"type":"string","example":"environment"},"value":{"type":"string","example":"production"}}},"Dbo.DatabaseAuthMethod":{"type":"string","enum":["basic","awsiam","windows","entraclientsecret","entraclientcert","cert"]},"Dbo.DatabaseConnectionOptions":{"type":"object","required":["host"],"properties":{"host":{"type":"string","description":"Database server host"},"port":{"type":"string","description":"Database server port","default":""},"dbname":{"type":"string","description":"Database schema name","default":""},"encryptedCredentials":{"type":"string","description":"Encrypted credentials for connecting to the database server when using basic authentication (username, password)\ncan be generated using this command:\n./dbo-headless-installer -swoparams=<SwoParamasJsonFile> --encrypt-creds --user=<USERNAME> --password=<PASSWORD>\nUse the dbo-headless-installer binary located at:\nhttps://agent-binaries.cloud.solarwinds.com/?prefix=dbo-headless-installer/latest/","default":""},"user":{"type":"string","description":"Username for connecting to database server needed only for auth methods other than basic auth","default":""},"sslEnabled":{"type":"boolean","description":"Enable ssl when agent connects to database server","default":false},"sslOptions":{"allOf":[{"$ref":"#/components/schemas/Dbo.DatabaseSslOptions"}],"description":"SSL connection options, when sslEnabled is true"},"cloudRegion":{"type":"string","description":"Cloud region in case of database managed by cloud provider, required for IAM authentication","default":""},"bindings":{"type":"string","description":"binding for packet sniffing for sniffer captureMethod (on-host), example: 0.0.0.0:6379,[::]:6379","default":""}}},"Dbo.DatabaseConnectionOptionsUpdate":{"type":"object","properties":{"host":{"type":"string","description":"Database server host"},"port":{"type":"string","description":"Database server port","default":""},"dbname":{"type":"string","description":"Database schema name","default":""},"encryptedCredentials":{"type":"string","description":"Encrypted credentials for connecting to the database server when using basic authentication (username, password)\ncan be generated using this command:\n./dbo-headless-installer -swoparams=<SwoParamasJsonFile> --encrypt-creds --user=<USERNAME> --password=<PASSWORD>\nUse the dbo-headless-installer binary located at:\nhttps://agent-binaries.cloud.solarwinds.com/?prefix=dbo-headless-installer/latest/","default":""},"user":{"type":"string","description":"Username for connecting to database server needed only for auth methods other than basic auth","default":""},"sslEnabled":{"type":"boolean","description":"Enable ssl when agent connects to database server","default":false},"sslOptions":{"allOf":[{"$ref":"#/components/schemas/Dbo.DatabaseSslOptionsUpdate"}],"description":"SSL connection options, when sslEnabled is true"},"cloudRegion":{"type":"string","description":"Cloud region in case of database managed by cloud provider, required for IAM authentication","default":""},"bindings":{"type":"string","description":"binding for packet sniffing for sniffer captureMethod (on-host), example: 0.0.0.0:6379,[::]:6379","default":""}}},"Dbo.DatabaseCredentialsPublicKeyResponse":{"type":"object","required":["publicKey"],"properties":{"publicKey":{"type":"string","description":"  Public Key for locally encrypting database credentials before using in database connectivity options\n  in observe or update Database call"}}},"Dbo.DatabaseMetricsCaptureMethod":{"type":"string","enum":["sniffer","poll","profiler","slow-log"]},"Dbo.DatabasePluginConfig":{"type":"object","required":["pluginName","configOptions","dbConnOptions"],"properties":{"pluginName":{"type":"string","description":"Name of plugin observing database server"},"configOptions":{"type":"array","items":{"$ref":"#/components/schemas/Common.KeyValuePair"},"description":"Configuration of plugin observing database server"},"dbConnOptions":{"type":"array","items":{"$ref":"#/components/schemas/Common.KeyValuePair"},"description":"Database connection options of plugin observing database server"}}},"Dbo.DatabasePluginConfigResponse":{"type":"object","required":["pluginConfig"],"properties":{"pluginConfig":{"type":"array","items":{"$ref":"#/components/schemas/Dbo.DatabasePluginConfig"},"description":"Configuration of plugin(s) observing database server"}}},"Dbo.DatabasePluginStatus":{"type":"object","required":["pluginName","deploymentStatus","healthStatus"],"properties":{"pluginName":{"type":"string","description":"Name of plugin observing database server"},"deploymentStatus":{"type":"string","description":"Deployment Status of plugin observing database server"},"healthStatus":{"type":"string","description":"Health Status of plugin observing database server"}}},"Dbo.DatabasePluginStatusResponse":{"type":"object","required":["plugins"],"properties":{"plugins":{"type":"array","items":{"$ref":"#/components/schemas/Dbo.DatabasePluginStatus"},"description":"Status of plugin(s) observing database server"}}},"Dbo.DatabaseSslConnectionMode":{"type":"string","enum":["require","verify-ca","verify-full"]},"Dbo.DatabaseSslOptions":{"type":"object","required":["sslMode"],"properties":{"sslMode":{"allOf":[{"$ref":"#/components/schemas/Dbo.DatabaseSslConnectionMode"}],"description":"SSL mode such as require, verify-ca, verify-full as applicable","default":"require"},"sslCAPath":{"type":"string","description":"CA file path","default":""},"sslKeyPath":{"type":"string","description":"SSL key file path","default":""},"sslCertPath":{"type":"string","description":"SSL cert file path","default":""}}},"Dbo.DatabaseSslOptionsUpdate":{"type":"object","properties":{"sslMode":{"allOf":[{"$ref":"#/components/schemas/Dbo.DatabaseSslConnectionMode"}],"description":"SSL mode such as require, verify-ca, verify-full as applicable","default":"require"},"sslCAPath":{"type":"string","description":"CA file path","default":""},"sslKeyPath":{"type":"string","description":"SSL key file path","default":""},"sslCertPath":{"type":"string","description":"SSL cert file path","default":""}}},"Dbo.DatabaseType":{"type":"string","enum":["mysql","mongo","mssql","redis","pgsql"]},"Dbo.ObserveDatabaseRequest":{"type":"object","required":["name","agentId","dbType","authMethod","dbConnOptions"],"properties":{"name":{"type":"string","description":"Name for the observed database entity"},"agentId":{"type":"string","description":"Swo Agent ID where the plugin(s) for observing database server should run"},"dbType":{"allOf":[{"$ref":"#/components/schemas/Dbo.DatabaseType"}],"description":"Database server type: mysql/mongo/mssql/pgsql/redis"},"authMethod":{"allOf":[{"$ref":"#/components/schemas/Dbo.DatabaseAuthMethod"}],"description":"Auth method to be used by the agent to connect to database server"},"captureMethod":{"allOf":[{"$ref":"#/components/schemas/Dbo.DatabaseMetricsCaptureMethod"}],"description":"Method for capturing metrics from database server: sniffer/poll/profiler/slow-log, ignored for SqlServer and Redis\nSniffer is supported for mysql, mongo, redis and pgsql.\nPoll is supported for mysql, mssql, pgsql.\nprofiler and slow-log are supported for mongo."},"configOptions":{"type":"array","items":{"$ref":"#/components/schemas/Common.KeyValuePair"},"description":"Optional advanced configuration options for plugins, e.g. disable-sampling set to true"},"dbConnOptions":{"allOf":[{"$ref":"#/components/schemas/Dbo.DatabaseConnectionOptions"}],"description":"Options specifying how plugins connect to database server"},"tags":{"type":"array","items":{"$ref":"#/components/schemas/Common.KeyValuePair"},"description":"Tags for observed database entity"}}},"Dbo.UpdateDatabaseRequest":{"type":"object","properties":{"name":{"type":"string","description":"Name for the observed database entity","default":""},"configOptions":{"type":"array","items":{"$ref":"#/components/schemas/Common.KeyValuePair"},"description":"Optional advanced configuration options for plugins, e.g. disable-sampling set to true"},"dbConnOptions":{"allOf":[{"$ref":"#/components/schemas/Dbo.DatabaseConnectionOptionsUpdate"}],"description":"Options specifying how plugins connect to database server, authentication method change is not supported"},"tags":{"type":"array","items":{"$ref":"#/components/schemas/Common.KeyValuePair"},"description":"Tags for observed database entity"},"deployedOn":{"type":"array","items":{"type":"string"},"description":"Host entity/entities where database server is deployed on"}}},"Dem.AvailabilityCheckSettings":{"type":"object","required":["testFrom","testIntervalInSeconds","protocols"],"properties":{"platformOptions":{"type":"object","allOf":[{"$ref":"#/components/schemas/Dem.ProbePlatformOptions"}],"nullable":true,"description":"Configure cloud platforms of the synthetic availability test probes. If omitted or set to null, no particular cloud platform will be enforced."},"testFrom":{"allOf":[{"$ref":"#/components/schemas/Dem.TestFrom"}],"description":"  Configure locations of the synthetic availability test probes.\n  Acceptable values depend on the selected type and actual values of existing probes."},"testIntervalInSeconds":{"allOf":[{"$ref":"#/components/schemas/Dem.SyntheticTestInterval"}],"description":"Configure how often availability tests should be performed. Provide a number of seconds that is one of 60, 300, 600, 900, 1800, 3600, 7200, 14400.","example":14400},"outageConfiguration":{"type":"object","allOf":[{"$ref":"#/components/schemas/Dem.OutageConfiguration"}],"nullable":true,"description":"  Default conditions when the entity is considered down.\n  If omitted or set to null, organization configuration will be used for this entity."},"checkForString":{"type":"object","allOf":[{"$ref":"#/components/schemas/Dem.CheckForString"}],"nullable":true,"description":"  Use this field to configure whether availability tests should check for presence or absence of a particular string on a page.\n  If the operator is DOES_NOT_CONTAIN and the value is found on the page, the availability test will fail.\n  Likewise, if the operator is CONTAINS and the value is not found on the page, the availability test will fail.\n  If omitted or set to null, the string checking functionality will be disabled."},"protocols":{"type":"array","items":{"$ref":"#/components/schemas/Dem.WebsiteProtocol"},"description":"Configure which protocols need availability tests to be performed. At least one protocol must be provided.","example":["HTTP","HTTPS"]},"ssl":{"type":"object","allOf":[{"$ref":"#/components/schemas/Dem.SslMonitoring"}],"nullable":true,"description":"  Configure monitoring of SSL/TLS certificates validity. This option is relevant for HTTPS protocol only.\n  If omitted or set to null, SSL monitoring will be disabled and its previous configuration discarded."},"customHeaders":{"type":"array","items":{"$ref":"#/components/schemas/Dem.CustomHeaders"},"nullable":true,"description":"  Configure custom request headers to be sent with each availability test. It is possible to provide multiple headers with the same name.\n  If omitted, set to null or set to an empty array, no custom headers will be sent."},"allowInsecureRenegotiation":{"type":"boolean","description":"  Allow insecure SSL renegotiation which introduces a security risk in the communication process.\n  Checking this option could lead to exposing credentials to unauthorized entities and the possibility of unauthorized access, interception, or manipulation of sensitive data, compromising the integrity and security of the communication channel.\n  Available only with HTTPS check.\n  If omitted or set to null, insecure SSL renegotiation won't be allowed.","example":true},"postData":{"type":"string","nullable":true,"description":"  Configure data that will be sent as POST request body by the synthetic probe.\n  If omitted or set to null/empty string, the probe will send the usual GET requests.","example":"{\"example\": \"value\"}"}}},"Dem.AvailabilityStatus":{"type":"string","enum":["up","down","paused","maintenance","unknown"]},"Dem.CheckForString":{"type":"object","required":["operator","value"],"properties":{"operator":{"allOf":[{"$ref":"#/components/schemas/Dem.CheckForStringOperator"}],"description":"Defines whether the check should pass only when the string is present on the page (CONTAINS) or only when it is absent (DOES_NOT_CONTAIN).","example":"CONTAINS"},"value":{"type":"string","description":"The string that which will be searched in the page source code.","example":"string"}}},"Dem.CheckForStringOperator":{"type":"string","enum":["CONTAINS","DOES_NOT_CONTAIN"]},"Dem.Coordinates":{"type":"object","required":["latitude","longitude"],"properties":{"latitude":{"type":"number","format":"float","description":"Latitude of the location.","example":38.89511},"longitude":{"type":"number","format":"float","description":"Longitude of the location.","example":-77.03637}},"description":"Represents geographical coordinates."},"Dem.CustomHeaders":{"type":"object","required":["name","value"],"properties":{"name":{"type":"string","description":"Name of a request header. Must contain only characters allowed by RFC: a-z, A-Z, 0-9, - and _.","example":"string"},"value":{"type":"string","description":"Value of a request header.","example":"string"}}},"Dem.EmptyObject":{"type":"object"},"Dem.FailingTestLocations":{"type":"string","enum":["all","any"]},"Dem.GetUriResponse":{"type":"object","required":["id","type","status","name","ipOrDomain","availabilityCheckSettings"],"properties":{"id":{"type":"string","example":"e-1448474379026206720"},"type":{"type":"string","example":"Uri"},"status":{"allOf":[{"$ref":"#/components/schemas/Dem.AvailabilityStatus"}],"example":"up"},"name":{"type":"string","description":"  Name of the URI, which must be unique within the organization.\n  The name must also not contain any control characters, any white space other than space (U+0020), or any consecutive, leading or trailing spaces.","example":"solarwinds.com"},"ipOrDomain":{"type":"string","description":"IP/domain address of the URI.","example":"solarwinds.com"},"availabilityCheckSettings":{"allOf":[{"$ref":"#/components/schemas/Dem.UriAvailabilityCheckSettings"}],"description":"Availability tests configuration for the URI."},"tags":{"type":"array","items":{"$ref":"#/components/schemas/Common.Tag"},"description":"Entity tags. Tag is a key-value pair, where there may be only single tag value for the same key."},"lastOutageStartTime":{"type":"string","nullable":true,"format":"date-time","description":"Time when the last outage started.","example":"2025-01-15T14:31:19.735Z"},"lastOutageEndTime":{"type":"string","nullable":true,"format":"date-time","description":"Time when the last outage ended.","example":"2025-01-15T14:31:19.735Z"},"lastTestTime":{"type":"string","nullable":true,"format":"date-time","description":"Time when the last test was performed.","example":"2025-01-15T14:31:19.735Z"},"lastErrorTime":{"type":"string","nullable":true,"format":"date-time","description":"Last time when a synthetic test failed.","example":"2025-01-15T14:31:19.735Z"},"lastResponseTime":{"type":"integer","format":"int32","nullable":true,"description":"Response time from the last synthetic check in milliseconds.","example":376}}},"Dem.GetWebsiteResponse":{"type":"object","required":["id","type","status","name","url","monitoringOptions"],"properties":{"id":{"type":"string","example":"e-1448474379026206720"},"type":{"type":"string","example":"Website"},"status":{"allOf":[{"$ref":"#/components/schemas/Dem.AvailabilityStatus"}],"example":"up"},"name":{"type":"string","description":"  Name of the website, which must be unique within the organization.\n  The website must also not contain any control characters, any white space other than space (U+0020), or any consecutive, leading or trailing spaces.","example":"solarwinds.com"},"url":{"type":"string","description":"URL of the website. Must be a valid URL with no leading or trailing white space. Must not contain invalid port number (>65535).","example":"https://www.solarwinds.com"},"monitoringOptions":{"allOf":[{"$ref":"#/components/schemas/Dem.WebsiteMonitoringOptions"}],"description":"Defines which monitoring features are enabled for a website.","readOnly":true},"availabilityCheckSettings":{"type":"object","allOf":[{"$ref":"#/components/schemas/Dem.AvailabilityCheckSettings"}],"nullable":true,"description":"  Use this field to configure availability tests for the website.\n  You are required to configure at least availability monitoring or real user monitoring to be able to create website."},"tags":{"type":"array","items":{"$ref":"#/components/schemas/Common.Tag"},"description":"Entity tags. Tag is a key-value pair, where there may be only single tag value for the same key."},"rum":{"type":"object","properties":{"apdexTimeInSeconds":{"type":"integer","format":"int32"},"snippet":{"type":"string"},"spa":{"type":"boolean"}},"required":["spa"],"description":"Use this field to configure real user monitoring (RUM) for the website.\nYou are required to configure at least availability monitoring or real user monitoring to be able to create website.","example":{"apdexTimeInSeconds":4,"snippet":"string","spa":true}},"lastOutageStartTime":{"type":"string","nullable":true,"format":"date-time","description":"Time when the last outage started.","example":"2025-01-15T14:31:19.735Z"},"lastOutageEndTime":{"type":"string","nullable":true,"format":"date-time","description":"Time when the last outage ended.","example":"2025-01-15T14:31:19.735Z"},"lastTestTime":{"type":"string","nullable":true,"format":"date-time","description":"Time when the last test was performed.","example":"2025-01-15T14:31:19.735Z"},"lastErrorTime":{"type":"string","nullable":true,"format":"date-time","description":"Last time when a synthetic test failed.","example":"2025-01-15T14:31:19.735Z"},"lastResponseTime":{"type":"integer","format":"int32","nullable":true,"description":"Response time from the last synthetic check in milliseconds.","example":376},"nextOnDemandAvailabilityTime":{"type":"integer","format":"int32","description":"Timestamp for when the next on-demand check could be executed. If at '0', it means you can execute it anytime.","example":0}}},"Dem.ListProbesResponse":{"type":"object","required":["probes"],"properties":{"probes":{"type":"array","items":{"$ref":"#/components/schemas/Dem.Probe"},"description":"Synthetic probes used to perform availability tests."}}},"Dem.OutageConfiguration":{"type":"object","required":["failingTestLocations","consecutiveForDown"],"properties":{"failingTestLocations":{"allOf":[{"$ref":"#/components/schemas/Dem.FailingTestLocations"}],"description":"How many locations must report a failure for an entity to be considered down.","example":"all"},"consecutiveForDown":{"type":"integer","format":"int32","minimum":1,"description":"Number of consecutive failing tests for an entity to be considered down.","example":2}}},"Dem.Probe":{"type":"object","required":["id","name","active","platform","region","country","city","coordinates","ipv4Addresses"],"properties":{"id":{"type":"string","description":"Unique identifier of the probe.","example":"probe-1"},"name":{"type":"string","description":"Name of the probe.","example":"Washington"},"active":{"type":"boolean","description":"True if the probe is active.","example":true},"platform":{"allOf":[{"$ref":"#/components/schemas/Dem.ProbePlatform"}],"description":"Cloud platform hosting the probe.","example":"AWS"},"region":{"type":"string","description":"Region where the probe is located.","example":"NA"},"country":{"type":"string","description":"ISO 3166-1 alpha-2 code of the country where the probe is located.","example":"US"},"city":{"type":"string","description":"City where the probe is located.","example":"Washington D.C."},"coordinates":{"allOf":[{"$ref":"#/components/schemas/Dem.Coordinates"}],"description":"Coordinates of the probe.","example":{"latitude":38.89511,"longitude":-77.03637}},"ipv4Addresses":{"type":"array","items":{"type":"string"},"description":"IPv4 addresses of the probe.","example":["34.232.5.40","44.207.30.12"]},"ipv6Addresses":{"type":"array","items":{"type":"string"},"description":"IPv6 addresses of the probe. Not all probes support IPv6.","example":["2001:0db8:85a3:0000:0000:8a2e:0370:7334"]}}},"Dem.ProbeLocationType":{"type":"string","enum":["REGION","COUNTRY","CITY"]},"Dem.ProbePlatform":{"type":"string","enum":["AWS","AZURE","GOOGLE_CLOUD"]},"Dem.ProbePlatformOptions":{"type":"object","required":["probePlatforms"],"properties":{"probePlatforms":{"type":"array","items":{"$ref":"#/components/schemas/Dem.ProbePlatform"},"description":"Cloud platforms hosting synthetic probes.","example":["AWS"]},"testFromAll":{"type":"boolean","description":"  Use this field to configure whether availability tests should be performed from all selected\n  platforms or one randomly selected platform. It has no effect if you provided only one platform\n  in the `probePlatforms` field.\n\n  If set to true, a separate test is made from each of the selected platforms.\n\n  If set to false, only one of the selected platforms is chosen every time.\n\n  If omitted, the previous setting will stay in effect. If there is no previous setting, the value\n  will default to false.","example":true}}},"Dem.SetDemSettingsResponse":{"type":"object"},"Dem.SslMonitoring":{"type":"object","properties":{"enabled":{"type":"boolean","nullable":true,"description":"  Whether SSL monitoring is enabled for the website.\n  If set to false, SSL monitoring will be disabled, but the other settings will be remembered in case you re-enable it later.\n  If omitted, the previous setting will stay in effect. If there is no previous setting, the value will default to false.","example":true},"daysPriorToExpiration":{"type":"integer","format":"int32","nullable":true,"description":"Number of days before the expiration date an SSL certificate will be considered 'expiring.'","example":7},"ignoreIntermediateCertificates":{"type":"boolean","nullable":true,"description":"  Use this option to limit the certificate expiration check to only the first certificate in the chain (normally the host certificate).\n  This way you will not be warned about impending expiration of intermediate or root Certification Authority certificates in the chain.\n  This option does not affect any other certificate validity checks besides expiration.\n  If omitted, the previous setting will stay in effect. If there is no previous setting, the value will default to false.","example":true}}},"Dem.SyntheticTestInterval":{"type":"number","enum":[60,300,600,900,1800,3600,7200,14400]},"Dem.TestDefinition":{"type":"object","required":["testFrom","testIntervalInSeconds"],"properties":{"platformOptions":{"type":"object","allOf":[{"$ref":"#/components/schemas/Dem.ProbePlatformOptions"}],"nullable":true,"description":"Configure cloud platforms of the synthetic availability test probes. If omitted or set to null, no particular cloud platform will be enforced."},"testFrom":{"allOf":[{"$ref":"#/components/schemas/Dem.TestFrom"}],"description":"  Configure locations of the synthetic availability test probes.\n  Acceptable values depend on the selected type and actual values of existing probes."},"testIntervalInSeconds":{"allOf":[{"$ref":"#/components/schemas/Dem.SyntheticTestInterval"}],"description":"Configure how often availability tests should be performed. Provide a number of seconds that is one of 60, 300, 600, 900, 1800, 3600, 7200, 14400.","example":14400},"outageConfiguration":{"type":"object","allOf":[{"$ref":"#/components/schemas/Dem.OutageConfiguration"}],"nullable":true,"description":"  Default conditions when the entity is considered down.\n  If omitted or set to null, organization configuration will be used for this entity."}}},"Dem.TestFrom":{"type":"object","required":["type","values"],"properties":{"type":{"allOf":[{"$ref":"#/components/schemas/Dem.ProbeLocationType"}],"description":"Specificity for location of synthetic probes to be used for availability tests.","example":"REGION"},"values":{"type":"array","items":{"type":"string"},"description":"A list of probe location values of the selected type. At least one value matching an existing probe must be provided.","example":["NA"]}},"example":{"type":"REGION","values":["NA"]}},"Dem.Uri":{"type":"object","required":["name","ipOrDomain","availabilityCheckSettings"],"properties":{"name":{"type":"string","description":"Name of the URI, which must be unique within the organization. The name must also not contain any control characters, any white space other than space (U+0020), or any consecutive, leading or trailing spaces.","example":"solarwinds.com"},"ipOrDomain":{"type":"string","description":"IP/domain of the URI.","example":"solarwinds.com"},"availabilityCheckSettings":{"allOf":[{"$ref":"#/components/schemas/Dem.UriAvailabilityCheckSettingsInput"}],"description":"Use this field to configure availability tests for the URI."},"tags":{"type":"array","items":{"$ref":"#/components/schemas/Common.Tag"},"description":"Tags associated with the URI for categorization."}}},"Dem.UriAvailabilityCheckSettings":{"type":"object","required":["testFrom","testIntervalInSeconds","protocol"],"properties":{"platformOptions":{"type":"object","allOf":[{"$ref":"#/components/schemas/Dem.ProbePlatformOptions"}],"nullable":true,"description":"Configure cloud platforms of the synthetic availability test probes. If omitted or set to null, no particular cloud platform will be enforced."},"testFrom":{"allOf":[{"$ref":"#/components/schemas/Dem.TestFrom"}],"description":"  Configure locations of the synthetic availability test probes.\n  Acceptable values depend on the selected type and actual values of existing probes."},"testIntervalInSeconds":{"allOf":[{"$ref":"#/components/schemas/Dem.SyntheticTestInterval"}],"description":"Configure how often availability tests should be performed. Provide a number of seconds that is one of 60, 300, 600, 900, 1800, 3600, 7200, 14400.","example":14400},"outageConfiguration":{"type":"object","allOf":[{"$ref":"#/components/schemas/Dem.OutageConfiguration"}],"nullable":true,"description":"  Default conditions when the entity is considered down.\n  If omitted or set to null, organization configuration will be used for this entity."},"ping":{"type":"object","allOf":[{"$ref":"#/components/schemas/Dem.UriPingSettings"}],"nullable":true,"description":"  Use this field to configure ping tests for the URI. If omitted or set to null, ping tests will be disabled.\n  One test type (ping or TCP) must be enabled for a URI."},"tcp":{"type":"object","allOf":[{"$ref":"#/components/schemas/Dem.UriTcpSettings"}],"nullable":true,"description":"  Use this field to configure TCP tests for the URI. If omitted or set to null, TCP tests will be disabled.\n  One test type (ping or TCP) must be enabled for a URI."},"protocol":{"allOf":[{"$ref":"#/components/schemas/Dem.UriProtocol"}],"description":"Protocol used to test availability of the URI.","example":"PING","readOnly":true}}},"Dem.UriAvailabilityCheckSettingsInput":{"type":"object","required":["testFrom","testIntervalInSeconds"],"properties":{"platformOptions":{"type":"object","allOf":[{"$ref":"#/components/schemas/Dem.ProbePlatformOptions"}],"nullable":true,"description":"Configure cloud platforms of the synthetic availability test probes. If omitted or set to null, no particular cloud platform will be enforced."},"testFrom":{"allOf":[{"$ref":"#/components/schemas/Dem.TestFrom"}],"description":"  Configure locations of the synthetic availability test probes.\n  Acceptable values depend on the selected type and actual values of existing probes."},"testIntervalInSeconds":{"allOf":[{"$ref":"#/components/schemas/Dem.SyntheticTestInterval"}],"description":"Configure how often availability tests should be performed. Provide a number of seconds that is one of 60, 300, 600, 900, 1800, 3600, 7200, 14400.","example":14400},"outageConfiguration":{"type":"object","allOf":[{"$ref":"#/components/schemas/Dem.OutageConfiguration"}],"nullable":true,"description":"  Default conditions when the entity is considered down.\n  If omitted or set to null, organization configuration will be used for this entity."},"ping":{"type":"object","allOf":[{"$ref":"#/components/schemas/Dem.UriPingSettings"}],"nullable":true,"description":"  Use this field to configure ping tests for the URI. If omitted or set to null, ping tests will be disabled.\n  One test type (ping or TCP) must be enabled for a URI."},"tcp":{"type":"object","allOf":[{"$ref":"#/components/schemas/Dem.UriTcpSettings"}],"nullable":true,"description":"  Use this field to configure TCP tests for the URI. If omitted or set to null, TCP tests will be disabled.\n  One test type (ping or TCP) must be enabled for a URI."}}},"Dem.UriPingSettings":{"type":"object","required":["enabled"],"properties":{"enabled":{"type":"boolean","description":"Use this field to configure ping tests for the URI. If omitted or set to false, ping tests will be disabled.\nOne test type (ping or TCP) must be enabled for a URI.","example":true}}},"Dem.UriProtocol":{"type":"string","enum":["PING","TCP"],"description":"Protocol to perform availability checks for."},"Dem.UriTcpSettings":{"type":"object","required":["enabled","port"],"properties":{"enabled":{"type":"boolean","description":"Use this field to configure TCP tests for the URI. If omitted or set to false, TCP tests will be disabled.\nOne test type (ping or TCP) must be enabled for a URI.  ","example":true},"port":{"type":"integer","format":"int32","description":"Port number to be used in TCP tests.","example":443},"stringToSend":{"type":"string","nullable":true,"description":"Use this field to specify a string to send in the body of a TCP request.","example":"GET / HTTP/1.1\r\nHost: solarwinds.com\r\nConnection: close\r\n\r\n"},"stringToExpect":{"type":"string","nullable":true,"description":"Use this field to specify a string to search for in the body of a TCP response.","example":"HTTP/1.1 200 OK"}}},"Dem.Website":{"type":"object","required":["name","url"],"properties":{"name":{"type":"string","description":"Name of the website, which must be unique within the organization. The website must also not contain any control characters, any white space other than space (U+0020), or any consecutive, leading or trailing spaces.","example":"solarwinds.com"},"url":{"type":"string","description":"URL of the website. Must be a valid URL with no leading or trailing white space. Must not contain invalid port number (>65535).","example":"https://www.solarwinds.com"},"availabilityCheckSettings":{"type":"object","allOf":[{"$ref":"#/components/schemas/Dem.AvailabilityCheckSettings"}],"nullable":true,"description":"Use this field to configure availability tests for the website."},"tags":{"type":"array","items":{"$ref":"#/components/schemas/Common.Tag"},"description":"Entity tags. Tag is a key-value pair, where there may be only single tag value for the same key."},"rum":{"type":"object","properties":{"apdexTimeInSeconds":{"type":"integer","format":"int32"},"spa":{"type":"boolean"}},"required":["spa"],"description":"    Use this field to configure real user monitoring (RUM) for the website.\n    You are required to configure at least availability monitoring or real user monitoring to be able to create website.","example":{"apdexTimeInSeconds":4,"spa":true}}}},"Dem.WebsiteMonitoringOptions":{"type":"object","required":["isAvailabilityActive","isRumActive"],"properties":{"isAvailabilityActive":{"type":"boolean","description":"True if the availability monitoring is active.","example":true},"isRumActive":{"type":"boolean","description":"True if the real user monitoring (RUM) is active.","example":false}}},"Dem.WebsiteProtocol":{"type":"string","enum":["HTTP","HTTPS"],"description":"Protocol to perform availability checks for."},"Entities.Entity":{"type":"object","required":["id","type","lastSeenTime","inMaintenance","tags"],"properties":{"id":{"type":"string","description":"The ID of the entity.","example":"e-1234567890","readOnly":true},"type":{"type":"string","description":"The type of the entity.","example":"SyslogHost","readOnly":true},"name":{"type":"string","description":"The name of the entity.","example":"syslog-host-1","readOnly":true},"displayName":{"type":"string","nullable":true,"description":"Entity display name / alias. This value is equal to name unless it is explicitly overridden.","example":"SyslogTest"},"createdTime":{"type":"string","format":"date-time","description":"Date and time of entity creation in UTC.","example":"2024-11-25T16:38:24Z","readOnly":true},"updatedTime":{"type":"string","format":"date-time","description":"Date and time of last entity update in UTC.","example":"2024-12-01T16:38:24Z","readOnly":true},"lastSeenTime":{"type":"string","format":"date-time","description":"Date and time when the entity has last received telemetry in UTC.","example":"2024-11-25T16:38:24Z","readOnly":true},"inMaintenance":{"type":"boolean","description":"Flag telling if given entity is in maintenance mode.","example":false,"readOnly":true},"healthscore":{"allOf":[{"$ref":"#/components/schemas/Entities.HealthScore"}],"example":{"score":100,"category":"good"},"readOnly":true},"tags":{"type":"object","additionalProperties":{"type":"string","nullable":true},"description":"Entity tags. Tag is a key-value pair, where there may be only a single tag value for the same key.","example":{"gg.tk.token":"test","kfi.tk.token":"qa-test"}},"attributes":{"type":"object","additionalProperties":{},"description":"Map of available attributes.","example":{"protocols":["HTTP"],"features":["rum"],"isAvailabilityCheckPaused":false,"extensions":{"has_extension":true}},"readOnly":true}}},"Entities.HealthScore":{"type":"object","required":["score","category"],"properties":{"score":{"type":"integer","format":"int32","description":"Health score value from 0 to 100."},"category":{"type":"string","enum":["good","bad","moderate"],"description":"Health Score category label."}}},"Logs.Archive":{"type":"object","required":["id","name","downloadUrl","archivedTimestamp","archiveSize"],"properties":{"id":{"type":"string","description":"The unique identifier of the log archive","example":"logs/138723/dt=2024-01-23/2024-01-23-08.json.gz"},"name":{"type":"string","description":"The name of the log archive","example":"2024-01-23-08.json.gz"},"downloadUrl":{"type":"string","description":"The download URL of the log archive","example":"https://ssp-log-archives.s3.amazonaws.com/logs/138723/dt%3D2024-01-23/2024-01-23-08.json.gz?X-Amz-Security-Token=IQ..."},"archivedTimestamp":{"type":"string","description":"The timestamp of when the log archive was created in epoch time","example":"1706020985"},"archiveSize":{"type":"integer","format":"int32","description":"The size of the archive","example":817226354}}},"Logs.Event":{"type":"object","required":["id","time","message","hostname","severity","program"],"properties":{"id":{"type":"string","example":"1793698955374546944"},"time":{"type":"string","example":"2024-01-01T00:00:00Z"},"message":{"type":"string","example":"This is a log message"},"hostname":{"type":"string","example":"webserver.example.com"},"severity":{"type":"string","example":"INFO"},"program":{"type":"string","example":"httpd"}}},"Metrics.AggregationMethods":{"type":"string","enum":["COUNT","MIN","MAX","AVG","SUM","LAST"]},"Metrics.CompositeMetric":{"type":"object","required":["name","formula"],"properties":{"name":{"type":"string","description":"Name of the composite metric.","example":"composite.custom.system.disk.io.rate"},"displayName":{"type":"string","nullable":true,"description":"Display name of the composite metric. A short description of the metric.","example":"Disk IO rate"},"description":{"type":"string","nullable":true,"description":"Description of the composite metric. A detailed description of the metric.","example":"Disk bytes transferred per second"},"formula":{"type":"string","description":"PromQL query to calculate the composite metric.","example":"rate(system.disk.io[5m])"},"units":{"type":"string","nullable":true,"description":"Unit of the composite metric.","example":"bytes/s"}}},"Metrics.Grouping":{"type":"object","required":["attributes","measurements"],"properties":{"attributes":{"type":"array","items":{"$ref":"#/components/schemas/Common.KeyValuePair"}},"measurements":{"type":"array","items":{"$ref":"#/components/schemas/Metrics.Measurement"},"description":"An empty list indicates no data points are available."}}},"Metrics.Measurement":{"type":"object","required":["time","value"],"properties":{"time":{"type":"string","format":"date-time","description":"Time of the measurement."},"value":{"type":"number","format":"double","description":"Value of the measurement."}}},"Metrics.MeasurementsFillingMethod":{"type":"string","enum":["NONE","ZERO_FILL","NULL_FILL","LAST_VALUE_FILL"]},"Metrics.MeasurementsRequest":{"type":"object","required":["name"],"properties":{"id":{"type":"string","description":"Optional identifier that will be echoed back for matching.","example":"throughput-series"},"name":{"type":"string","description":"Metric name.","example":"dbo.host.queries.tput"},"filter":{"type":"string","description":"Query to filter the measurement values.","example":"id:[id1,id2] category:moderate"},"groupBy":{"type":"array","items":{"type":"string"},"description":"List of attribute names to group measurements by.","example":["query"]},"aggregateBy":{"allOf":[{"$ref":"#/components/schemas/Metrics.AggregationMethods"}],"description":"Aggregation method used to group measurements."},"preGroupBy":{"type":"array","items":{"type":"string"},"description":"Secondary grouping, allowing aggregation inside individual buckets. Has to be set together with `preGroupByMethod`.","example":["host"]},"preGroupByMethod":{"allOf":[{"$ref":"#/components/schemas/Metrics.AggregationMethods"}],"description":"Aggregation method for secondary grouping, inside individual buckets. Has to be set together with `preGroupBy`.","example":"SUM"},"seriesType":{"allOf":[{"$ref":"#/components/schemas/Metrics.MetricSeriesType"}],"description":"Indicates what type of data to return.","default":"TIMESERIES"},"fillMethod":{"allOf":[{"$ref":"#/components/schemas/Metrics.MeasurementsFillingMethod"}],"description":"Method for filling missing data points in the range.","default":"NONE"},"fillIfEmpty":{"type":"boolean","description":"Asks for filling even if no data points were found in the range.","default":false}}},"Metrics.MetricErrorCode":{"type":"string","enum":["AccessForbidden","InternalError","InvalidRequest","ResourceNotFound","ServiceUnavailable","Unauthorized","CannotModifyMetric","MetricNameExists"]},"Metrics.MetricSeriesType":{"type":"string","enum":["TIMESERIES","SCALAR"]},"Metrics.QueryParams":{"type":"object","properties":{"startTime":{"type":"string","format":"date-time","description":"Timestamp in ISO 8601 format in UTC timezone: yyyy-MM-ddTHH:mm:ssZ"},"endTime":{"type":"string","format":"date-time","description":"Timestamp in ISO 8601 format in UTC timezone: yyyy-MM-ddTHH:mm:ssZ"},"pageSize":{"type":"integer","format":"int32","description":"Number of items in a response page. Default varies by API.","example":100},"skipToken":{"type":"string","description":"Token for the requested page.","example":"https://api.na-01.cloud.solarwinds.com/v1/logs/archives?skipToken=..."}}},"Metrics.UpdateCompositeMetricRequest":{"type":"object","required":["formula"],"properties":{"displayName":{"type":"string","nullable":true,"description":"Display name of the composite metric. A short description of the metric.","example":"Disk IO rate"},"description":{"type":"string","nullable":true,"description":"Description of the composite metric. A detailed description of the metric.","example":"Disk bytes transferred per second"},"formula":{"type":"string","description":"PromQL query to calculate the composite metric.","example":"rate(system.disk.io[5m])"},"units":{"type":"string","nullable":true,"description":"Unit of the composite metric.","example":"bytes/s"}}},"Tokens.CreateTokenRequest":{"type":"object","required":["name","tags","type"],"properties":{"name":{"type":"string"},"tags":{"type":"object","properties":{"server":{"type":"string"},"tag_without_value":{"type":"string"}},"required":["server","tag_without_value"]},"type":{"type":"string","enum":["ingestion"]}}},"Tokens.CreateTokenResponse":{"type":"object","required":["token"],"properties":{"token":{"type":"string","description":"API token.","example":"1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef"}}},"Versions":{"type":"string","enum":["1.0.0","1.0.1","1.0.2","1.0.3","1.0.4","1.0.5","1.0.6","1.0.7","1.0.8","1.0.9","1.0.10-pre"]}},"securitySchemes":{"BearerAuth":{"type":"http","scheme":"Bearer"}}},"servers":[{"url":"https://api.na-01.cloud.solarwinds.com","description":"Regional endpoint","variables":{"region":{"default":"na-01","description":"Region name"}}}],"x-speakeasy-retries":{"strategy":"backoff","backoff":{"initialInterval":500,"maxInterval":60000,"maxElapsedTime":3600000,"exponent":1.5},"statusCodes":["5XX"],"retryConnectionErrors":true}}